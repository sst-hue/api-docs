import{_ as e,c as t,o as a,a as r}from"./app.8e21f956.js";const g=JSON.parse('{"title":"Class: MulticastDelegate<T>","description":"","frontmatter":{},"headers":[{"level":2,"title":"Type parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Implements","slug":"implements","link":"#implements","children":[]},{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]}]},{"level":2,"title":"Constructors","slug":"constructors-1","link":"#constructors-1","children":[{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]}]},{"level":2,"title":"Methods","slug":"methods-1","link":"#methods-1","children":[{"level":3,"title":"add","slug":"add","link":"#add","children":[]},{"level":3,"title":"broadcast","slug":"broadcast","link":"#broadcast","children":[]},{"level":3,"title":"clear","slug":"clear","link":"#clear","children":[]},{"level":3,"title":"remove","slug":"remove","link":"#remove","children":[]}]}],"relativePath":"classes/Type.Type.MulticastDelegate.md"}'),d={name:"classes/Type.Type.MulticastDelegate.md"},l=r('<p><a href="./../README.html">auto-mwapi-lib</a> / <a href="./../modules.html">Exports</a> / <a href="./../modules/Type.html">Type</a> / <a href="./../modules/Type.Type.html">Type</a> / MulticastDelegate</p><h1 id="class-multicastdelegate-t" tabindex="-1">Class: MulticastDelegate&lt;T&gt; <a class="header-anchor" href="#class-multicastdelegate-t" aria-hidden="true">#</a></h1><p><a href="./../modules/Type.html">Type</a>.<a href="./../modules/Type.Type.html">Type</a>.MulticastDelegate</p><p><strong><code>Author</code></strong></p><p>xiangkun.sun</p><p><strong><code>Description</code></strong></p><p>多播委托接口</p><p><strong><code>Network Status</code></strong></p><p>usage:双端</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends (...<code>arg</code>: <code>unknown</code>[]) =&gt; <code>unknown</code></td></tr></tbody></table><h2 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-hidden="true">#</a></h2><ul><li><a href="./../interfaces/Type.Type.MulticastDelegateInterface.html"><code>MulticastDelegateInterface</code></a>&lt;<code>T</code>&gt;</li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.MulticastDelegate.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.MulticastDelegate.html#add">add</a></li><li><a href="./Type.Type.MulticastDelegate.html#broadcast">broadcast</a></li><li><a href="./Type.Type.MulticastDelegate.html#clear">clear</a></li><li><a href="./Type.Type.MulticastDelegate.html#remove">remove</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h3><p>• <strong>new MulticastDelegate</strong>&lt;<code>T</code>&gt;()</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends (...<code>arg</code>: <code>unknown</code>[]) =&gt; <code>unknown</code></td></tr></tbody></table><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-hidden="true">#</a></h2><h3 id="add" tabindex="-1">add <a class="header-anchor" href="#add" aria-hidden="true">#</a></h3><p>▸ <strong>add</strong>(<code>func</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>绑定代理函数</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">usage: 绑定的函数 default</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="implementation-of" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of" aria-hidden="true">#</a></h4><p><a href="./../interfaces/Type.Type.MulticastDelegateInterface.html">MulticastDelegateInterface</a>.<a href="./../interfaces/Type.Type.MulticastDelegateInterface.html#add">add</a></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p>Type/index.d.ts:152</p><hr><h3 id="broadcast" tabindex="-1">broadcast <a class="header-anchor" href="#broadcast" aria-hidden="true">#</a></h3><p>▸ <strong>broadcast</strong>(<code>...arg</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>广播通知代理函数</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...arg</code></td><td style="text-align:left;"><code>Parameters</code>&lt;<code>T</code>&gt;</td><td style="text-align:left;">usage: 参数</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="implementation-of-1" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of-1" aria-hidden="true">#</a></h4><p><a href="./../interfaces/Type.Type.MulticastDelegateInterface.html">MulticastDelegateInterface</a>.<a href="./../interfaces/Type.Type.MulticastDelegateInterface.html#broadcast">broadcast</a></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p>Type/index.d.ts:169</p><hr><h3 id="clear" tabindex="-1">clear <a class="header-anchor" href="#clear" aria-hidden="true">#</a></h3><p>▸ <strong>clear</strong>(): <code>void</code></p><p><strong><code>Description</code></strong></p><p>情况委托</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p>Type/index.d.ts:163</p><hr><h3 id="remove" tabindex="-1">remove <a class="header-anchor" href="#remove" aria-hidden="true">#</a></h3><p>▸ <strong>remove</strong>(<code>func</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>删除绑定代理函数</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">usage: 删除绑定的函数 default</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="implementation-of-2" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of-2" aria-hidden="true">#</a></h4><p><a href="./../interfaces/Type.Type.MulticastDelegateInterface.html">MulticastDelegateInterface</a>.<a href="./../interfaces/Type.Type.MulticastDelegateInterface.html#remove">remove</a></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p>Type/index.d.ts:158</p>',81),n=[l];function s(o,i,c,h,p,f){return a(),t("div",null,n)}const m=e(d,[["render",s]]);export{g as __pageData,m as default};
