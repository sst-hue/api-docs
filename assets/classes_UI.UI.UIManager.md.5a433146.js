import{_ as e,c as t,o as a,a as d}from"./app.8e21f956.js";const u=JSON.parse('{"title":"Class: UIManager","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Properties","slug":"properties","link":"#properties","children":[]},{"level":3,"title":"Accessors","slug":"accessors","link":"#accessors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]}]},{"level":2,"title":"Constructors","slug":"constructors-1","link":"#constructors-1","children":[{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]}]},{"level":2,"title":"Properties","slug":"properties-1","link":"#properties-1","children":[{"level":3,"title":"allPanels","slug":"allpanels","link":"#allpanels","children":[]},{"level":3,"title":"createPanelMap","slug":"createpanelmap","link":"#createpanelmap","children":[]},{"level":3,"title":"logUIInfo","slug":"loguiinfo","link":"#loguiinfo","children":[]},{"level":3,"title":"uniquePanel","slug":"uniquepanel","link":"#uniquepanel","children":[]}]},{"level":2,"title":"Accessors","slug":"accessors-1","link":"#accessors-1","children":[{"level":3,"title":"canvas","slug":"canvas","link":"#canvas","children":[]},{"level":3,"title":"uiLogInfoEnable","slug":"uiloginfoenable","link":"#uiloginfoenable","children":[]},{"level":3,"title":"instance","slug":"instance","link":"#instance","children":[]}]},{"level":2,"title":"Methods","slug":"methods-1","link":"#methods-1","children":[{"level":3,"title":"addUILayerMap","slug":"adduilayermap","link":"#adduilayermap","children":[]},{"level":3,"title":"create","slug":"create","link":"#create","children":[]},{"level":3,"title":"destroy","slug":"destroy","link":"#destroy","children":[]},{"level":3,"title":"destroyUI","slug":"destroyui","link":"#destroyui","children":[]},{"level":3,"title":"dumpUIData","slug":"dumpuidata","link":"#dumpuidata","children":[]},{"level":3,"title":"getAllUI","slug":"getallui","link":"#getallui","children":[]},{"level":3,"title":"getUI","slug":"getui","link":"#getui","children":[]},{"level":3,"title":"getUILayer","slug":"getuilayer","link":"#getuilayer","children":[]},{"level":3,"title":"hide","slug":"hide","link":"#hide","children":[]},{"level":3,"title":"hideUI","slug":"hideui","link":"#hideui","children":[]},{"level":3,"title":"init","slug":"init","link":"#init","children":[]},{"level":3,"title":"isShown","slug":"isshown","link":"#isshown","children":[]},{"level":3,"title":"setAllMiddleAndBottomPanelVisible","slug":"setallmiddleandbottompanelvisible","link":"#setallmiddleandbottompanelvisible","children":[]},{"level":3,"title":"show","slug":"show","link":"#show","children":[]},{"level":3,"title":"showUI","slug":"showui","link":"#showui","children":[]},{"level":3,"title":"getInstance","slug":"getinstance","link":"#getinstance","children":[]}]}],"relativePath":"classes/UI.UI.UIManager.md"}'),r={name:"classes/UI.UI.UIManager.md"},n=d('<p><a href="./../README.html">auto-mwapi-lib</a> / <a href="./../modules.html">Exports</a> / <a href="./../modules/UI.html">UI</a> / <a href="./../modules/UI.UI.html">UI</a> / UIManager</p><h1 id="class-uimanager" tabindex="-1">Class: UIManager <a class="header-anchor" href="#class-uimanager" aria-hidden="true">#</a></h1><p><a href="./../modules/UI.html">UI</a>.<a href="./../modules/UI.UI.html">UI</a>.UIManager</p><p><strong><code>Author</code></strong></p><p>wei.yang</p><p><strong><code>Instance</code></strong></p><p><strong><code>Description</code></strong></p><p>UI 管理类，可以继承此类，自带一个全局 UI 作为 UI 的总节点。 需要在全局调用，否则会自动在第一个 UI 生成时自动生成一个默认的管理类.</p><p><strong><code>Precautions</code></strong></p><p>单例类，请使用 getInstance 获取对象</p><p><strong><code>Network Status</code></strong></p><p>usage:客户端</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h3><ul><li><a href="./UI.UI.UIManager.html#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h3><ul><li><a href="./UI.UI.UIManager.html#allpanels">allPanels</a></li><li><a href="./UI.UI.UIManager.html#createpanelmap">createPanelMap</a></li><li><a href="./UI.UI.UIManager.html#loguiinfo">logUIInfo</a></li><li><a href="./UI.UI.UIManager.html#uniquepanel">uniquePanel</a></li></ul><h3 id="accessors" tabindex="-1">Accessors <a class="header-anchor" href="#accessors" aria-hidden="true">#</a></h3><ul><li><a href="./UI.UI.UIManager.html#canvas">canvas</a></li><li><a href="./UI.UI.UIManager.html#uiloginfoenable">uiLogInfoEnable</a></li><li><a href="./UI.UI.UIManager.html#instance">instance</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h3><ul><li><a href="./UI.UI.UIManager.html#adduilayermap">addUILayerMap</a></li><li><a href="./UI.UI.UIManager.html#create">create</a></li><li><a href="./UI.UI.UIManager.html#destroy">destroy</a></li><li><a href="./UI.UI.UIManager.html#destroyui">destroyUI</a></li><li><a href="./UI.UI.UIManager.html#dumpuidata">dumpUIData</a></li><li><a href="./UI.UI.UIManager.html#getallui">getAllUI</a></li><li><a href="./UI.UI.UIManager.html#getui">getUI</a></li><li><a href="./UI.UI.UIManager.html#getuilayer">getUILayer</a></li><li><a href="./UI.UI.UIManager.html#hide">hide</a></li><li><a href="./UI.UI.UIManager.html#hideui">hideUI</a></li><li><a href="./UI.UI.UIManager.html#init">init</a></li><li><a href="./UI.UI.UIManager.html#isshown">isShown</a></li><li><a href="./UI.UI.UIManager.html#setallmiddleandbottompanelvisible">setAllMiddleAndBottomPanelVisible</a></li><li><a href="./UI.UI.UIManager.html#show">show</a></li><li><a href="./UI.UI.UIManager.html#showui">showUI</a></li><li><a href="./UI.UI.UIManager.html#getinstance">getInstance</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h3><p>• <strong>new UIManager</strong>()</p><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-hidden="true">#</a></h2><h3 id="allpanels" tabindex="-1">allPanels <a class="header-anchor" href="#allpanels" aria-hidden="true">#</a></h3><p>• <code>Protected</code> <strong>allPanels</strong>: <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a>[]</p><p><strong><code>Description</code></strong></p><p>所有创建过的 Panel</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2936</p><hr><h3 id="createpanelmap" tabindex="-1">createPanelMap <a class="header-anchor" href="#createpanelmap" aria-hidden="true">#</a></h3><p>• <code>Protected</code> <strong>createPanelMap</strong>: <code>Map</code>&lt;<code>string</code>, <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a>[]&gt;</p><p><strong><code>Description</code></strong></p><p>所有创建过的管理好的 panels</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2934</p><hr><h3 id="loguiinfo" tabindex="-1">logUIInfo <a class="header-anchor" href="#loguiinfo" aria-hidden="true">#</a></h3><p>• <code>Protected</code> <strong>logUIInfo</strong>: <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>是否 dump GameUI Log 信息</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2938</p><hr><h3 id="uniquepanel" tabindex="-1">uniquePanel <a class="header-anchor" href="#uniquepanel" aria-hidden="true">#</a></h3><p>• <code>Protected</code> <strong>uniquePanel</strong>: <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a></p><p><strong><code>Description</code></strong></p><p>独占 Panel</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2932</p><h2 id="accessors-1" tabindex="-1">Accessors <a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a></h2><h3 id="canvas" tabindex="-1">canvas <a class="header-anchor" href="#canvas" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>canvas</strong>(): <a href="./UI.UI.Canvas.html"><code>Canvas</code></a></p><p><strong><code>Description</code></strong></p><p>全局所有 UI 的根 canvas</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><a href="./UI.UI.Canvas.html"><code>Canvas</code></a></p><p>根 canvas</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2954</p><hr><h3 id="uiloginfoenable" tabindex="-1">uiLogInfoEnable <a class="header-anchor" href="#uiloginfoenable" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>uiLogInfoEnable</strong>(): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>获取允许定时输出 UIManager 中管理到的 UI 的信息</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>是否允许</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2966</p><p>• <code>set</code> <strong>uiLogInfoEnable</strong>(<code>enable</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>允许定时输出 UIManager 中管理到的 UI 的信息</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>enable</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">usage:运行与否</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2960</p><hr><h3 id="instance" tabindex="-1">instance <a class="header-anchor" href="#instance" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>instance</strong>(): <a href="./UI.UI.UIManager.html"><code>UIManager</code></a></p><p><strong><code>Description</code></strong></p><p>获取 UIManager 单例</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><a href="./UI.UI.UIManager.html"><code>UIManager</code></a></p><p>返回获取 UIManager 单例的对象</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2923</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-hidden="true">#</a></h2><h3 id="adduilayermap" tabindex="-1">addUILayerMap <a class="header-anchor" href="#adduilayermap" aria-hidden="true">#</a></h3><p>▸ <code>Protected</code> <strong>addUILayerMap</strong>(<code>layer</code>, <code>startZOrder</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>添加 UI 的管理层</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>layer</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:layer 的序列号</td></tr><tr><td style="text-align:left;"><code>startZOrder</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:该层开始的 zOrder</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2973</p><hr><h3 id="create" tabindex="-1">create <a class="header-anchor" href="#create" aria-hidden="true">#</a></h3><p>▸ <strong>create</strong>&lt;<code>T</code>&gt;(<code>PanelClass</code>): <code>T</code></p><p><strong><code>Description</code></strong></p><p>创建一个界面</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PanelClass</code></td><td style="text-align:left;">() =&gt; <code>T</code></td><td style="text-align:left;">usage:界面的类</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-hidden="true">#</a></h4><p><code>T</code></p><p>返回创建的 UI 行为脚本</p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a></h4><p>UI/index.d.ts:3021</p><hr><h3 id="destroy" tabindex="-1">destroy <a class="header-anchor" href="#destroy" aria-hidden="true">#</a></h3><p>▸ <strong>destroy</strong>(): <code>void</code></p><p><strong><code>Description</code></strong></p><p>销毁该单列，也会销毁所有的 UI,需要重新创建才能管理 UI</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2978</p><hr><h3 id="destroyui" tabindex="-1">destroyUI <a class="header-anchor" href="#destroyui" aria-hidden="true">#</a></h3><p>▸ <strong>destroyUI</strong>&lt;<code>T</code>&gt;(<code>PanelClass</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>销毁一个界面,相当于 DestroyObject</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PanelClass</code></td><td style="text-align:left;">() =&gt; <code>T</code></td><td style="text-align:left;">usage:销毁界面</td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a></h4><p>UI/index.d.ts:3047</p><hr><h3 id="dumpuidata" tabindex="-1">dumpUIData <a class="header-anchor" href="#dumpuidata" aria-hidden="true">#</a></h3><p>▸ <strong>dumpUIData</strong>(): <code>void</code></p><p><strong><code>Description</code></strong></p><p>打印所有管理到的 UI 信息</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2948</p><hr><h3 id="getallui" tabindex="-1">getAllUI <a class="header-anchor" href="#getallui" aria-hidden="true">#</a></h3><p>▸ <strong>getAllUI</strong>&lt;<code>T</code>&gt;(<code>PanelClass</code>): <code>T</code>[]</p><p><strong><code>Description</code></strong></p><p>根据界面类获取界面的所有对象</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PanelClass</code></td><td style="text-align:left;">() =&gt; <code>T</code></td><td style="text-align:left;">usage:界面类型</td></tr></tbody></table><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-hidden="true">#</a></h4><p><code>T</code>[]</p><p>界面对象数组,没有的话返回空</p><h4 id="defined-in-13" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a></h4><p>UI/index.d.ts:3014</p><hr><h3 id="getui" tabindex="-1">getUI <a class="header-anchor" href="#getui" aria-hidden="true">#</a></h3><p>▸ <strong>getUI</strong>&lt;<code>T</code>&gt;(<code>PanelClass</code>, <code>bNeedNew?</code>): <code>T</code></p><p><strong><code>Description</code></strong></p><p>根据界面类获取界面的对象</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="type-parameters-3" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PanelClass</code></td><td style="text-align:left;">() =&gt; <code>T</code></td><td style="text-align:left;">usage:界面类型</td></tr><tr><td style="text-align:left;"><code>bNeedNew?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">usage:没有找到的有缓存的 UI 界面时，是否需要新建一个 default:true</td></tr></tbody></table><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-hidden="true">#</a></h4><p><code>T</code></p><p>界面对象</p><h4 id="defined-in-14" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a></h4><p>UI/index.d.ts:3002</p><hr><h3 id="getuilayer" tabindex="-1">getUILayer <a class="header-anchor" href="#getuilayer" aria-hidden="true">#</a></h3><p>▸ <strong>getUILayer</strong>(<code>panel</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>获取一个 UI 的层级</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>panel</code></td><td style="text-align:left;"><a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a></td><td style="text-align:left;">usage:GameUI</td></tr></tbody></table><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-hidden="true">#</a></h4><p><code>number</code></p><p>UI 的层级</p><h4 id="defined-in-15" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a></h4><p>UI/index.d.ts:3067</p><hr><h3 id="hide" tabindex="-1">hide <a class="header-anchor" href="#hide" aria-hidden="true">#</a></h3><p>▸ <strong>hide</strong>&lt;<code>T</code>&gt;(<code>PanelClass</code>): <code>T</code></p><p><strong><code>Description</code></strong></p><p>隐藏一个界面，只是隐藏界面设置为 Collapsed</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="type-parameters-4" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PanelClass</code></td><td style="text-align:left;">() =&gt; <code>T</code></td><td style="text-align:left;">usage:界面的类</td></tr></tbody></table><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-hidden="true">#</a></h4><p><code>T</code></p><p>返回隐藏的 UI 行为类(这个参数可以传递给界面的 onHide 方法)</p><h4 id="defined-in-16" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a></h4><p>UI/index.d.ts:3041</p><hr><h3 id="hideui" tabindex="-1">hideUI <a class="header-anchor" href="#hideui" aria-hidden="true">#</a></h3><p>▸ <strong>hideUI</strong>(<code>panel</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>移除一个显示的界面,只是隐藏界面设置为 Collapsed</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>panel</code></td><td style="text-align:left;"><a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a></td><td style="text-align:left;">usage:界面</td></tr></tbody></table><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>是否移除成功</p><h4 id="defined-in-17" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2994</p><hr><h3 id="init" tabindex="-1">init <a class="header-anchor" href="#init" aria-hidden="true">#</a></h3><p>▸ <code>Protected</code> <strong>init</strong>(): <code>void</code></p><p><strong><code>Description</code></strong></p><p>初始化 UIManger</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-18" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2943</p><hr><h3 id="isshown" tabindex="-1">isShown <a class="header-anchor" href="#isshown" aria-hidden="true">#</a></h3><p>▸ <strong>isShown</strong>(<code>panel</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>判断界面是否处于显示状态,需要位于层类显示并且是可见的</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>panel</code></td><td style="text-align:left;"><a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a></td><td style="text-align:left;">usage:界面</td></tr></tbody></table><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>是否显示</p><h4 id="defined-in-19" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a></h4><p>UI/index.d.ts:3054</p><hr><h3 id="setallmiddleandbottompanelvisible" tabindex="-1">setAllMiddleAndBottomPanelVisible <a class="header-anchor" href="#setallmiddleandbottompanelvisible" aria-hidden="true">#</a></h3><p>▸ <strong>setAllMiddleAndBottomPanelVisible</strong>(<code>value</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>设置 Middle 和 Bottom 层所有 Panel 的可见性</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">usage:显隐值</td></tr></tbody></table><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-20" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-20" aria-hidden="true">#</a></h4><p>UI/index.d.ts:3060</p><hr><h3 id="show" tabindex="-1">show <a class="header-anchor" href="#show" aria-hidden="true">#</a></h3><p>▸ <strong>show</strong>&lt;<code>T</code>&gt;(<code>PanelClass</code>, <code>...params</code>): <code>T</code></p><p><strong><code>Description</code></strong></p><p>显示一个界面，会把界面添加到界面上，从原有父节点移除</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="type-parameters-5" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PanelClass</code></td><td style="text-align:left;">() =&gt; <code>T</code></td><td style="text-align:left;">usage:界面的类如果类没有 UI 绑定，会创建一个默认的空 UI</td></tr><tr><td style="text-align:left;"><code>...params</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">usage:显示参数(这个参数可以传递给界面的 onShow 方法)</td></tr></tbody></table><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-hidden="true">#</a></h4><p><code>T</code></p><p>显示的界面</p><h4 id="defined-in-21" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a></h4><p>UI/index.d.ts:3029</p><hr><h3 id="showui" tabindex="-1">showUI <a class="header-anchor" href="#showui" aria-hidden="true">#</a></h3><p>▸ <strong>showUI</strong>(<code>panel</code>, <code>layer?</code>, <code>...params</code>): <a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a></p><p><strong><code>Description</code></strong></p><p>显示一个界面,会把界面添加到界面上，从原有父节点移除</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>panel</code></td><td style="text-align:left;"><a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a></td><td style="text-align:left;">usage:界面</td></tr><tr><td style="text-align:left;"><code>layer?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:图层 default:UILayer.UILayerMiddle</td></tr><tr><td style="text-align:left;"><code>...params</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">usage:显示参数(这个参数可以传递给界面的 onShow 方法)</td></tr></tbody></table><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-hidden="true">#</a></h4><p><a href="./UI.UI.UIBehavior.html"><code>UIBehavior</code></a></p><p>显示的界面</p><h4 id="defined-in-22" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-22" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2987</p><hr><h3 id="getinstance" tabindex="-1">getInstance <a class="header-anchor" href="#getinstance" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>getInstance</strong>&lt;<code>T</code>&gt;(<code>ManagerClass</code>): <code>T</code></p><p><strong><code>Description</code></strong></p><p>获取 UIManager 子类 ManagerClass 单例，如果是第一次调用会创建一个 ManagerClass 的单例供全局使用</p><p><strong><code>Effect</code></strong></p><p>只在客户端调用生效</p><h4 id="type-parameters-6" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./UI.UI.UIManager.html"><code>UIManager</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ManagerClass</code></td><td style="text-align:left;">() =&gt; <code>T</code></td><td style="text-align:left;">usage:子类</td></tr></tbody></table><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-hidden="true">#</a></h4><p><code>T</code></p><p>返回获取 UIManager 子类 ManagerClass 单例的对象</p><h4 id="defined-in-23" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-23" aria-hidden="true">#</a></h4><p>UI/index.d.ts:2930</p>',325),i=[n];function l(s,o,h,c,p,g){return a(),t("div",null,i)}const I=e(r,[["render",l]]);export{u as __pageData,I as default};
