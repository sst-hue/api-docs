import{_ as e,c as t,o as a,a as r}from"./app.8e21f956.js";const g=JSON.parse('{"title":"Class: Rotation","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Properties","slug":"properties","link":"#properties","children":[]},{"level":3,"title":"Accessors","slug":"accessors","link":"#accessors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]}]},{"level":2,"title":"Constructors","slug":"constructors-1","link":"#constructors-1","children":[{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]}]},{"level":2,"title":"Properties","slug":"properties-1","link":"#properties-1","children":[{"level":3,"title":"x","slug":"x","link":"#x","children":[]},{"level":3,"title":"y","slug":"y","link":"#y","children":[]},{"level":3,"title":"z","slug":"z","link":"#z","children":[]}]},{"level":2,"title":"Accessors","slug":"accessors-1","link":"#accessors-1","children":[{"level":3,"title":"zero","slug":"zero","link":"#zero","children":[]}]},{"level":2,"title":"Methods","slug":"methods-1","link":"#methods-1","children":[{"level":3,"title":"add","slug":"add","link":"#add","children":[]},{"level":3,"title":"clone","slug":"clone","link":"#clone","children":[]},{"level":3,"title":"equals","slug":"equals","link":"#equals","children":[]},{"level":3,"title":"fromQuaternion","slug":"fromquaternion","link":"#fromquaternion","children":[]},{"level":3,"title":"fromString","slug":"fromstring","link":"#fromstring","children":[]},{"level":3,"title":"fromVector","slug":"fromvector","link":"#fromvector","children":[]},{"level":3,"title":"getForce","slug":"getforce","link":"#getforce","children":[]},{"level":3,"title":"getInverse","slug":"getinverse","link":"#getinverse","children":[]},{"level":3,"title":"multiply","slug":"multiply","link":"#multiply","children":[]},{"level":3,"title":"rotateVector","slug":"rotatevector","link":"#rotatevector","children":[]},{"level":3,"title":"set","slug":"set","link":"#set","children":[]},{"level":3,"title":"strictEquals","slug":"strictequals","link":"#strictequals","children":[]},{"level":3,"title":"subtract","slug":"subtract","link":"#subtract","children":[]},{"level":3,"title":"toQuaternion","slug":"toquaternion","link":"#toquaternion","children":[]},{"level":3,"title":"toString","slug":"tostring","link":"#tostring","children":[]},{"level":3,"title":"add","slug":"add-1","link":"#add-1","children":[]},{"level":3,"title":"copy","slug":"copy","link":"#copy","children":[]},{"level":3,"title":"fromQuaternion","slug":"fromquaternion-1","link":"#fromquaternion-1","children":[]},{"level":3,"title":"fromString","slug":"fromstring-1","link":"#fromstring-1","children":[]},{"level":3,"title":"fromVector","slug":"fromvector-1","link":"#fromvector-1","children":[]},{"level":3,"title":"lerp","slug":"lerp","link":"#lerp","children":[]},{"level":3,"title":"multiply","slug":"multiply-1","link":"#multiply-1","children":[]},{"level":3,"title":"subtract","slug":"subtract-1","link":"#subtract-1","children":[]}]}],"relativePath":"classes/Type.Type.Rotation.md"}'),d={name:"classes/Type.Type.Rotation.md"},o=r('<p><a href="./../README.html">auto-mwapi-lib</a> / <a href="./../modules.html">Exports</a> / <a href="./../modules/Type.html">Type</a> / <a href="./../modules/Type.Type.html">Type</a> / Rotation</p><h1 id="class-rotation" tabindex="-1">Class: Rotation <a class="header-anchor" href="#class-rotation" aria-hidden="true">#</a></h1><p><a href="./../modules/Type.html">Type</a>.<a href="./../modules/Type.Type.html">Type</a>.Rotation</p><p><strong><code>Author</code></strong></p><p>SuoWei</p><p><strong><code>Description</code></strong></p><p>由分量 (x,y,z) 组成的三维空间中的旋转量，对应 UE 的 Rotator。</p><p><strong><code>Network Status</code></strong></p><p>usage:双端</p><p><strong><code>Precautions</code></strong></p><p>所有旋转值均以度为单位存储</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Rotation.html#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Rotation.html#x">x</a></li><li><a href="./Type.Type.Rotation.html#y">y</a></li><li><a href="./Type.Type.Rotation.html#z">z</a></li></ul><h3 id="accessors" tabindex="-1">Accessors <a class="header-anchor" href="#accessors" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Rotation.html#zero">zero</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Rotation.html#add">add</a></li><li><a href="./Type.Type.Rotation.html#clone">clone</a></li><li><a href="./Type.Type.Rotation.html#equals">equals</a></li><li><a href="./Type.Type.Rotation.html#fromquaternion">fromQuaternion</a></li><li><a href="./Type.Type.Rotation.html#fromstring">fromString</a></li><li><a href="./Type.Type.Rotation.html#fromvector">fromVector</a></li><li><a href="./Type.Type.Rotation.html#getforce">getForce</a></li><li><a href="./Type.Type.Rotation.html#getinverse">getInverse</a></li><li><a href="./Type.Type.Rotation.html#multiply">multiply</a></li><li><a href="./Type.Type.Rotation.html#rotatevector">rotateVector</a></li><li><a href="./Type.Type.Rotation.html#set">set</a></li><li><a href="./Type.Type.Rotation.html#strictequals">strictEquals</a></li><li><a href="./Type.Type.Rotation.html#subtract">subtract</a></li><li><a href="./Type.Type.Rotation.html#toquaternion">toQuaternion</a></li><li><a href="./Type.Type.Rotation.html#tostring">toString</a></li><li><a href="./Type.Type.Rotation.html#add-1">add</a></li><li><a href="./Type.Type.Rotation.html#copy">copy</a></li><li><a href="./Type.Type.Rotation.html#fromquaternion-1">fromQuaternion</a></li><li><a href="./Type.Type.Rotation.html#fromstring-1">fromString</a></li><li><a href="./Type.Type.Rotation.html#fromvector-1">fromVector</a></li><li><a href="./Type.Type.Rotation.html#lerp">lerp</a></li><li><a href="./Type.Type.Rotation.html#multiply-1">multiply</a></li><li><a href="./Type.Type.Rotation.html#subtract-1">subtract</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h3><p>• <strong>new Rotation</strong>()</p><p><strong><code>Description</code></strong></p><p>构建一个新的 Rotation。值为(0, 0, 0)</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2481</p><p>• <strong>new Rotation</strong>(<code>vector</code>)</p><p><strong><code>Description</code></strong></p><p>用给定的 vector 中的 x, y, z 值设定给 x, y, z 。</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>vector</code></td><td style="text-align:left;"><a href="./Type.Type.Vector.html"><code>Vector</code></a></td><td style="text-align:left;">usage:给定的 vector</td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2486</p><p>• <strong>new Rotation</strong>(<code>forward</code>, <code>up</code>)</p><p><strong><code>Description</code></strong></p><p>构造一个旋转，将旋转 Vector.FORWARD 以指向给定的前向矢量的方向，向上矢量作为参考。</p><p><strong><code>Precautions</code></strong></p><p>如果向前和向上指向完全相同 (或相反)的方向，或者其中之一的长度为 0，则返回 (0, 0, 0)。</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>forward</code></td><td style="text-align:left;"><a href="./Type.Type.Vector.html"><code>Vector</code></a></td><td style="text-align:left;">usage:前向矢量</td></tr><tr><td style="text-align:left;"><code>up</code></td><td style="text-align:left;"><a href="./Type.Type.Vector.html"><code>Vector</code></a></td><td style="text-align:left;">usage:向上矢量</td></tr></tbody></table><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2493</p><p>• <strong>new Rotation</strong>(<code>rotation</code>)</p><p><strong><code>Description</code></strong></p><p>复制 rotation，并返回一个新的。</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>rotation</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:复制的 Rotation 对象</td></tr></tbody></table><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2498</p><p>• <strong>new Rotation</strong>(<code>v</code>)</p><p><strong><code>Description</code></strong></p><p>通过四元数构造</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Quaternion.html"><code>Quaternion</code></a></td><td style="text-align:left;">usage:四元数</td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2503</p><p>• <strong>new Rotation</strong>(<code>x</code>, <code>y</code>, <code>z</code>)</p><p><strong><code>Description</code></strong></p><p>通过三个分量构造</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:旋转的 x 分量</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:旋转的 y 分量</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:旋转的 z 分量</td></tr></tbody></table><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2510</p><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-hidden="true">#</a></h2><h3 id="x" tabindex="-1">x <a class="header-anchor" href="#x" aria-hidden="true">#</a></h3><p>• <strong>x</strong>: <code>number</code></p><p><strong><code>Description</code></strong></p><p>旋转的 x 分量</p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2469</p><hr><h3 id="y" tabindex="-1">y <a class="header-anchor" href="#y" aria-hidden="true">#</a></h3><p>• <strong>y</strong>: <code>number</code></p><p><strong><code>Description</code></strong></p><p>旋转的 y 分量</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2473</p><hr><h3 id="z" tabindex="-1">z <a class="header-anchor" href="#z" aria-hidden="true">#</a></h3><p>• <strong>z</strong>: <code>number</code></p><p><strong><code>Description</code></strong></p><p>旋转的 z 分量</p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2477</p><h2 id="accessors-1" tabindex="-1">Accessors <a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a></h2><h3 id="zero" tabindex="-1">zero <a class="header-anchor" href="#zero" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>zero</strong>(): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>获取一个空旋转的角度 (0, 0, 0)</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>Rotation (0, 0, 0)</p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2438</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-hidden="true">#</a></h2><h3 id="add" tabindex="-1">add <a class="header-anchor" href="#add" aria-hidden="true">#</a></h3><p>▸ <strong>add</strong>(<code>a</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>当前旋转量加上一个旋转量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>this</p><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2585</p><hr><h3 id="clone" tabindex="-1">clone <a class="header-anchor" href="#clone" aria-hidden="true">#</a></h3><p>▸ <strong>clone</strong>(): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>克隆当前旋转量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>返回一个新的旋转量</p><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2516</p><hr><h3 id="equals" tabindex="-1">equals <a class="header-anchor" href="#equals" aria-hidden="true">#</a></h3><p>▸ <strong>equals</strong>(<code>other</code>, <code>epsilon?</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>判断当前角度是否在误差范围内与指定向量相等。</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>other</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:比对的旋转量</td></tr><tr><td style="text-align:left;"><code>epsilon?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:误差值 default:1.e-7</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>比对的结果</p><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2644</p><hr><h3 id="fromquaternion" tabindex="-1">fromQuaternion <a class="header-anchor" href="#fromquaternion" aria-hidden="true">#</a></h3><p>▸ <strong>fromQuaternion</strong>(<code>v</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>当前 Rotation 读取一个四元数</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Quaternion.html"><code>Quaternion</code></a></td><td style="text-align:left;">usage:读取的四元数数据</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-13" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2543</p><hr><h3 id="fromstring" tabindex="-1">fromString <a class="header-anchor" href="#fromstring" aria-hidden="true">#</a></h3><p>▸ <strong>fromString</strong>(<code>str</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>当前 Rotation 读取一个字符串数据</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">usage:字符串数据</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-14" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2531</p><hr><h3 id="fromvector" tabindex="-1">fromVector <a class="header-anchor" href="#fromvector" aria-hidden="true">#</a></h3><p>▸ <strong>fromVector</strong>(<code>v</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>当前 Rotation 读取一个 Vector</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector.html"><code>Vector</code></a></td><td style="text-align:left;">usage:读取的向量数据</td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-15" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2555</p><hr><h3 id="getforce" tabindex="-1">getForce <a class="header-anchor" href="#getforce" aria-hidden="true">#</a></h3><p>▸ <strong>getForce</strong>(<code>outer?</code>): <a href="./Type.Type.Vector.html"><code>Vector</code></a></p><p><strong><code>Description</code></strong></p><p>获取此旋转后的方向向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Rotation 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector.html"><code>Vector</code></a></td><td style="text-align:left;">usage:被写入数据的向量, 传入的 outer 不能为 null/undefined default:null</td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector.html"><code>Vector</code></a></p><p>旋转的方向向量</p><h4 id="defined-in-16" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2660</p><hr><h3 id="getinverse" tabindex="-1">getInverse <a class="header-anchor" href="#getinverse" aria-hidden="true">#</a></h3><p>▸ <strong>getInverse</strong>(<code>outer?</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>返回一个新的反向旋转。</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Rotation 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:被写入数据的旋转量 default:null</td></tr></tbody></table><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>反方向的旋转</p><h4 id="defined-in-17" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2652</p><hr><h3 id="multiply" tabindex="-1">multiply <a class="header-anchor" href="#multiply" aria-hidden="true">#</a></h3><p>▸ <strong>multiply</strong>(<code>v</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>当前旋转量乘以一个旋转量 (相当于四元数叉乘)</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量</td></tr></tbody></table><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>this</p><h4 id="defined-in-18" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2599</p><hr><h3 id="rotatevector" tabindex="-1">rotateVector <a class="header-anchor" href="#rotatevector" aria-hidden="true">#</a></h3><p>▸ <strong>rotateVector</strong>(<code>v</code>): <a href="./Type.Type.Vector.html"><code>Vector</code></a></p><p><strong><code>Description</code></strong></p><p>当前角度旋转一个向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector.html"><code>Vector</code></a></td><td style="text-align:left;">usage:被旋转的向量</td></tr></tbody></table><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector.html"><code>Vector</code></a></p><p>旋转后的向量</p><h4 id="defined-in-19" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2578</p><hr><h3 id="set" tabindex="-1">set <a class="header-anchor" href="#set" aria-hidden="true">#</a></h3><p>▸ <strong>set</strong>(<code>v</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>当前旋转量设置为新的旋转量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量</td></tr></tbody></table><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>旋转量</p><h4 id="defined-in-20" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-20" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2562</p><p>▸ <strong>set</strong>(<code>x</code>, <code>y</code>, <code>z</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>为当前旋转量设置每个分量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-15" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:旋转的 x 分量</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:旋转的 y 分量</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:旋转的 z 分量</td></tr></tbody></table><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>旋转量</p><h4 id="defined-in-21" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2571</p><hr><h3 id="strictequals" tabindex="-1">strictEquals <a class="header-anchor" href="#strictequals" aria-hidden="true">#</a></h3><p>▸ <strong>strictEquals</strong>(<code>other</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>判断当前角度是否与指定向量相等。</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-16" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>other</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:比对的旋转量</td></tr></tbody></table><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>比对的结果</p><h4 id="defined-in-22" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-22" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2606</p><hr><h3 id="subtract" tabindex="-1">subtract <a class="header-anchor" href="#subtract" aria-hidden="true">#</a></h3><p>▸ <strong>subtract</strong>(<code>a</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>当前旋转量减去一个旋转量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-17" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量</td></tr></tbody></table><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>this</p><h4 id="defined-in-23" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-23" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2592</p><hr><h3 id="toquaternion" tabindex="-1">toQuaternion <a class="header-anchor" href="#toquaternion" aria-hidden="true">#</a></h3><p>▸ <strong>toQuaternion</strong>(): <a href="./Type.Type.Quaternion.html"><code>Quaternion</code></a></p><p><strong><code>Description</code></strong></p><p>当前 Rotation 输出为四元数</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Quaternion.html"><code>Quaternion</code></a></p><p>输出的四元数</p><h4 id="defined-in-24" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-24" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2549</p><hr><h3 id="tostring" tabindex="-1">toString <a class="header-anchor" href="#tostring" aria-hidden="true">#</a></h3><p>▸ <strong>toString</strong>(): <code>string</code></p><p><strong><code>Description</code></strong></p><p>当前 Rotation 输出为字符串</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-hidden="true">#</a></h4><p><code>string</code></p><p>输出的字符串数据</p><h4 id="defined-in-25" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2537</p><hr><h3 id="add-1" tabindex="-1">add <a class="header-anchor" href="#add-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>add</strong>(<code>a</code>, <code>b</code>, <code>outer</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>当前旋转量加上一个旋转量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>outer 不能为 null/undefined</p><h4 id="parameters-18" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量 b</td></tr><tr><td style="text-align:left;"><code>outer</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:接收结果的旋转量</td></tr></tbody></table><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>相加的结果</p><h4 id="defined-in-26" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-26" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2616</p><hr><h3 id="copy" tabindex="-1">copy <a class="header-anchor" href="#copy" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>copy</strong>(<code>a</code>, <code>outer</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>复制目标旋转</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>outer 不能为 null/undefined</p><h4 id="parameters-19" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:目标旋转</td></tr><tr><td style="text-align:left;"><code>outer</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:接收结果的旋转</td></tr></tbody></table><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>拷贝得到的新旋转对象</p><h4 id="defined-in-27" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2525</p><hr><h3 id="fromquaternion-1" tabindex="-1">fromQuaternion <a class="header-anchor" href="#fromquaternion-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>fromQuaternion</strong>(<code>v</code>, <code>outer?</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>转换 Quaternion 为 Rotation</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Rotation 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-20" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Quaternion.html"><code>Quaternion</code></a></td><td style="text-align:left;">usage:Quaternion</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:传入的 Rotation 对象 default:null</td></tr></tbody></table><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>Rotation</p><h4 id="defined-in-28" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-28" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2456</p><hr><h3 id="fromstring-1" tabindex="-1">fromString <a class="header-anchor" href="#fromstring-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>fromString</strong>(<code>v</code>, <code>outer?</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>转换字符串数据为 Rotation</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Rotation 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-21" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-21" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">usage:string</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:传入的 Rotation 对象 default:null</td></tr></tbody></table><h4 id="returns-20" tabindex="-1">Returns <a class="header-anchor" href="#returns-20" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>Rotation</p><h4 id="defined-in-29" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-29" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2465</p><hr><h3 id="fromvector-1" tabindex="-1">fromVector <a class="header-anchor" href="#fromvector-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>fromVector</strong>(<code>v</code>, <code>outer?</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>转换 Vector 为 Rotation</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Rotation 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-22" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-22" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector.html"><code>Vector</code></a></td><td style="text-align:left;">usage:MWVector</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:传入的 Rotation 对象 default:null</td></tr></tbody></table><h4 id="returns-21" tabindex="-1">Returns <a class="header-anchor" href="#returns-21" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>Rotation</p><h4 id="defined-in-30" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-30" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2447</p><hr><h3 id="lerp" tabindex="-1">lerp <a class="header-anchor" href="#lerp" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>lerp</strong>(<code>a</code>, <code>b</code>, <code>alpha</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>对两个旋转量进行插值</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-23" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-23" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量 b</td></tr><tr><td style="text-align:left;"><code>alpha</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:插值</td></tr></tbody></table><h4 id="returns-22" tabindex="-1">Returns <a class="header-anchor" href="#returns-22" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>Rotation</p><h4 id="defined-in-31" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-31" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2669</p><hr><h3 id="multiply-1" tabindex="-1">multiply <a class="header-anchor" href="#multiply-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>multiply</strong>(<code>a</code>, <code>b</code>, <code>outer</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>当前旋转量减去一个旋转量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>outer 不能为 null/undefined</p><h4 id="parameters-24" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-24" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量 b</td></tr><tr><td style="text-align:left;"><code>outer</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:接收结果的旋转量变量</td></tr></tbody></table><h4 id="returns-23" tabindex="-1">Returns <a class="header-anchor" href="#returns-23" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>相乘的结果</p><h4 id="defined-in-32" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-32" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2636</p><hr><h3 id="subtract-1" tabindex="-1">subtract <a class="header-anchor" href="#subtract-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>subtract</strong>(<code>a</code>, <code>b</code>, <code>outer</code>): <a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p><strong><code>Description</code></strong></p><p>当前旋转量减去一个旋转量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>outer 不能为 null/undefined</p><h4 id="parameters-25" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:旋转量 b</td></tr><tr><td style="text-align:left;"><code>outer</code></td><td style="text-align:left;"><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></td><td style="text-align:left;">usage:接收结果的旋转量变量</td></tr></tbody></table><h4 id="returns-24" tabindex="-1">Returns <a class="header-anchor" href="#returns-24" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Rotation.html"><code>Rotation</code></a></p><p>相减的结果</p><h4 id="defined-in-33" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-33" aria-hidden="true">#</a></h4><p>Type/index.d.ts:2626</p>',438),n=[o];function i(l,h,s,c,p,f){return a(),t("div",null,n)}const u=e(d,[["render",i]]);export{g as __pageData,u as default};
