import{_ as e,c as t,o as d,a as r}from"./app.8e21f956.js";const g=JSON.parse('{"title":"Class: Vector2","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Properties","slug":"properties","link":"#properties","children":[]},{"level":3,"title":"Accessors","slug":"accessors","link":"#accessors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]}]},{"level":2,"title":"Constructors","slug":"constructors-1","link":"#constructors-1","children":[{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]}]},{"level":2,"title":"Properties","slug":"properties-1","link":"#properties-1","children":[{"level":3,"title":"x","slug":"x","link":"#x","children":[]},{"level":3,"title":"y","slug":"y","link":"#y","children":[]}]},{"level":2,"title":"Accessors","slug":"accessors-1","link":"#accessors-1","children":[{"level":3,"title":"length","slug":"length","link":"#length","children":[]},{"level":3,"title":"magnitude","slug":"magnitude","link":"#magnitude","children":[]},{"level":3,"title":"negative","slug":"negative","link":"#negative","children":[]},{"level":3,"title":"normalized","slug":"normalized","link":"#normalized","children":[]},{"level":3,"title":"sqrLength","slug":"sqrlength","link":"#sqrlength","children":[]},{"level":3,"title":"sqrMagnitude","slug":"sqrmagnitude","link":"#sqrmagnitude","children":[]},{"level":3,"title":"negOne","slug":"negone","link":"#negone","children":[]},{"level":3,"title":"one","slug":"one","link":"#one","children":[]},{"level":3,"title":"unitX","slug":"unitx","link":"#unitx","children":[]},{"level":3,"title":"unitY","slug":"unity","link":"#unity","children":[]},{"level":3,"title":"zero","slug":"zero","link":"#zero","children":[]}]},{"level":2,"title":"Methods","slug":"methods-1","link":"#methods-1","children":[{"level":3,"title":"add","slug":"add","link":"#add","children":[]},{"level":3,"title":"clone","slug":"clone","link":"#clone","children":[]},{"level":3,"title":"divide","slug":"divide","link":"#divide","children":[]},{"level":3,"title":"equals","slug":"equals","link":"#equals","children":[]},{"level":3,"title":"fromString","slug":"fromstring","link":"#fromstring","children":[]},{"level":3,"title":"multiply","slug":"multiply","link":"#multiply","children":[]},{"level":3,"title":"normalize","slug":"normalize","link":"#normalize","children":[]},{"level":3,"title":"set","slug":"set","link":"#set","children":[]},{"level":3,"title":"strictEquals","slug":"strictequals","link":"#strictequals","children":[]},{"level":3,"title":"subtract","slug":"subtract","link":"#subtract","children":[]},{"level":3,"title":"toString","slug":"tostring","link":"#tostring","children":[]},{"level":3,"title":"add","slug":"add-1","link":"#add-1","children":[]},{"level":3,"title":"angle","slug":"angle","link":"#angle","children":[]},{"level":3,"title":"ceil","slug":"ceil","link":"#ceil","children":[]},{"level":3,"title":"clamp","slug":"clamp","link":"#clamp","children":[]},{"level":3,"title":"clone","slug":"clone-1","link":"#clone-1","children":[]},{"level":3,"title":"copy","slug":"copy","link":"#copy","children":[]},{"level":3,"title":"cross","slug":"cross","link":"#cross","children":[]},{"level":3,"title":"distance","slug":"distance","link":"#distance","children":[]},{"level":3,"title":"divide","slug":"divide-1","link":"#divide-1","children":[]},{"level":3,"title":"dot","slug":"dot","link":"#dot","children":[]},{"level":3,"title":"equals","slug":"equals-1","link":"#equals-1","children":[]},{"level":3,"title":"floor","slug":"floor","link":"#floor","children":[]},{"level":3,"title":"fromString","slug":"fromstring-1","link":"#fromstring-1","children":[]},{"level":3,"title":"fromUEVector2D","slug":"fromuevector2d","link":"#fromuevector2d","children":[]},{"level":3,"title":"invert","slug":"invert","link":"#invert","children":[]},{"level":3,"title":"invertSafe","slug":"invertsafe","link":"#invertsafe","children":[]},{"level":3,"title":"lerp","slug":"lerp","link":"#lerp","children":[]},{"level":3,"title":"magnitude","slug":"magnitude-1","link":"#magnitude-1","children":[]},{"level":3,"title":"max","slug":"max","link":"#max","children":[]},{"level":3,"title":"min","slug":"min","link":"#min","children":[]},{"level":3,"title":"moveTowards","slug":"movetowards","link":"#movetowards","children":[]},{"level":3,"title":"multiply","slug":"multiply-1","link":"#multiply-1","children":[]},{"level":3,"title":"negate","slug":"negate","link":"#negate","children":[]},{"level":3,"title":"normalize","slug":"normalize-1","link":"#normalize-1","children":[]},{"level":3,"title":"project","slug":"project","link":"#project","children":[]},{"level":3,"title":"random","slug":"random","link":"#random","children":[]},{"level":3,"title":"reflect","slug":"reflect","link":"#reflect","children":[]},{"level":3,"title":"rotate","slug":"rotate","link":"#rotate","children":[]},{"level":3,"title":"round","slug":"round","link":"#round","children":[]},{"level":3,"title":"set","slug":"set-1","link":"#set-1","children":[]},{"level":3,"title":"signAngle","slug":"signangle","link":"#signangle","children":[]},{"level":3,"title":"sqrMagnitude","slug":"sqrmagnitude-1","link":"#sqrmagnitude-1","children":[]},{"level":3,"title":"squaredDistance","slug":"squareddistance","link":"#squareddistance","children":[]},{"level":3,"title":"strictEquals","slug":"strictequals-1","link":"#strictequals-1","children":[]},{"level":3,"title":"subtract","slug":"subtract-1","link":"#subtract-1","children":[]}]}],"relativePath":"classes/Type.Type.Vector2.md"}'),a={name:"classes/Type.Type.Vector2.md"},o=r('<p><a href="./../README.html">auto-mwapi-lib</a> / <a href="./../modules.html">Exports</a> / <a href="./../modules/Type.html">Type</a> / <a href="./../modules/Type.Type.html">Type</a> / Vector2</p><h1 id="class-vector2" tabindex="-1">Class: Vector2 <a class="header-anchor" href="#class-vector2" aria-hidden="true">#</a></h1><p><a href="./../modules/Type.html">Type</a>.<a href="./../modules/Type.Type.html">Type</a>.Vector2</p><p><strong><code>Author</code></strong></p><p>SuoWei</p><p><strong><code>Description</code></strong></p><p>由分量 (x,y) 组成的二维空间中的向量</p><p><strong><code>Network Status</code></strong></p><p>usage:双端</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Vector2.html#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Vector2.html#x">x</a></li><li><a href="./Type.Type.Vector2.html#y">y</a></li></ul><h3 id="accessors" tabindex="-1">Accessors <a class="header-anchor" href="#accessors" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Vector2.html#length">length</a></li><li><a href="./Type.Type.Vector2.html#magnitude">magnitude</a></li><li><a href="./Type.Type.Vector2.html#negative">negative</a></li><li><a href="./Type.Type.Vector2.html#normalized">normalized</a></li><li><a href="./Type.Type.Vector2.html#sqrlength">sqrLength</a></li><li><a href="./Type.Type.Vector2.html#sqrmagnitude">sqrMagnitude</a></li><li><a href="./Type.Type.Vector2.html#negone">negOne</a></li><li><a href="./Type.Type.Vector2.html#one">one</a></li><li><a href="./Type.Type.Vector2.html#unitx">unitX</a></li><li><a href="./Type.Type.Vector2.html#unity">unitY</a></li><li><a href="./Type.Type.Vector2.html#zero">zero</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Vector2.html#add">add</a></li><li><a href="./Type.Type.Vector2.html#clone">clone</a></li><li><a href="./Type.Type.Vector2.html#divide">divide</a></li><li><a href="./Type.Type.Vector2.html#equals">equals</a></li><li><a href="./Type.Type.Vector2.html#fromstring">fromString</a></li><li><a href="./Type.Type.Vector2.html#multiply">multiply</a></li><li><a href="./Type.Type.Vector2.html#normalize">normalize</a></li><li><a href="./Type.Type.Vector2.html#set">set</a></li><li><a href="./Type.Type.Vector2.html#strictequals">strictEquals</a></li><li><a href="./Type.Type.Vector2.html#subtract">subtract</a></li><li><a href="./Type.Type.Vector2.html#tostring">toString</a></li><li><a href="./Type.Type.Vector2.html#add-1">add</a></li><li><a href="./Type.Type.Vector2.html#angle">angle</a></li><li><a href="./Type.Type.Vector2.html#ceil">ceil</a></li><li><a href="./Type.Type.Vector2.html#clamp">clamp</a></li><li><a href="./Type.Type.Vector2.html#clone-1">clone</a></li><li><a href="./Type.Type.Vector2.html#copy">copy</a></li><li><a href="./Type.Type.Vector2.html#cross">cross</a></li><li><a href="./Type.Type.Vector2.html#distance">distance</a></li><li><a href="./Type.Type.Vector2.html#divide-1">divide</a></li><li><a href="./Type.Type.Vector2.html#dot">dot</a></li><li><a href="./Type.Type.Vector2.html#equals-1">equals</a></li><li><a href="./Type.Type.Vector2.html#floor">floor</a></li><li><a href="./Type.Type.Vector2.html#fromstring-1">fromString</a></li><li><a href="./Type.Type.Vector2.html#fromuevector2d">fromUEVector2D</a></li><li><a href="./Type.Type.Vector2.html#invert">invert</a></li><li><a href="./Type.Type.Vector2.html#invertsafe">invertSafe</a></li><li><a href="./Type.Type.Vector2.html#lerp">lerp</a></li><li><a href="./Type.Type.Vector2.html#magnitude-1">magnitude</a></li><li><a href="./Type.Type.Vector2.html#max">max</a></li><li><a href="./Type.Type.Vector2.html#min">min</a></li><li><a href="./Type.Type.Vector2.html#movetowards">moveTowards</a></li><li><a href="./Type.Type.Vector2.html#multiply-1">multiply</a></li><li><a href="./Type.Type.Vector2.html#negate">negate</a></li><li><a href="./Type.Type.Vector2.html#normalize-1">normalize</a></li><li><a href="./Type.Type.Vector2.html#project">project</a></li><li><a href="./Type.Type.Vector2.html#random">random</a></li><li><a href="./Type.Type.Vector2.html#reflect">reflect</a></li><li><a href="./Type.Type.Vector2.html#rotate">rotate</a></li><li><a href="./Type.Type.Vector2.html#round">round</a></li><li><a href="./Type.Type.Vector2.html#set-1">set</a></li><li><a href="./Type.Type.Vector2.html#signangle">signAngle</a></li><li><a href="./Type.Type.Vector2.html#sqrmagnitude-1">sqrMagnitude</a></li><li><a href="./Type.Type.Vector2.html#squareddistance">squaredDistance</a></li><li><a href="./Type.Type.Vector2.html#strictequals-1">strictEquals</a></li><li><a href="./Type.Type.Vector2.html#subtract-1">subtract</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h3><p>• <strong>new Vector2</strong>(<code>x?</code>, <code>y?</code>)</p><p><strong><code>Description</code></strong></p><p>用给定的 x, y 分量构建一个新的 Vector2</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:x 分量 default:0</td></tr><tr><td style="text-align:left;"><code>y?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:y 分量 default:0</td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3774</p><p>• <strong>new Vector2</strong>(<code>f</code>)</p><p><strong><code>Description</code></strong></p><p>用给定的 f 值设定给 x, y</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>f</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:给定的 f 值</td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3779</p><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-hidden="true">#</a></h2><h3 id="x" tabindex="-1">x <a class="header-anchor" href="#x" aria-hidden="true">#</a></h3><p>• <strong>x</strong>: <code>number</code></p><p><strong><code>Description</code></strong></p><p>向量的 x 分量</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3764</p><hr><h3 id="y" tabindex="-1">y <a class="header-anchor" href="#y" aria-hidden="true">#</a></h3><p>• <strong>y</strong>: <code>number</code></p><p><strong><code>Description</code></strong></p><p>向量的 y 分量</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3768</p><h2 id="accessors-1" tabindex="-1">Accessors <a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a></h2><h3 id="length" tabindex="-1">length <a class="header-anchor" href="#length" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>length</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>计算向量的长度</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>number</code></p><p>向量的长度</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3858</p><hr><h3 id="magnitude" tabindex="-1">magnitude <a class="header-anchor" href="#magnitude" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>magnitude</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>计算向量的长度</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>number</code></p><p>向量的长度</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3868</p><hr><h3 id="negative" tabindex="-1">negative <a class="header-anchor" href="#negative" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>negative</strong>(): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>返回各个分量取反的新 Vector2 对象</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>各个分量取反的新 Vector2 对象</p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3873</p><hr><h3 id="normalized" tabindex="-1">normalized <a class="header-anchor" href="#normalized" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>normalized</strong>(): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>返回一个新的 Vector2 对象</p><p><strong><code>Description</code></strong></p><p>其大小为 1, 但仍指向相同的方向 如果向量太小而无法归一化, 则返回 (0, 0)</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>返回一个新的 Vector2 对象</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3879</p><hr><h3 id="sqrlength" tabindex="-1">sqrLength <a class="header-anchor" href="#sqrlength" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>sqrLength</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>向量长度的平方</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p><code>number</code></p><p>向量长度的平方</p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3853</p><hr><h3 id="sqrmagnitude" tabindex="-1">sqrMagnitude <a class="header-anchor" href="#sqrmagnitude" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>sqrMagnitude</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>计算向量的长度平方</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-hidden="true">#</a></h4><p><code>number</code></p><p>向量的长度平方</p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3863</p><hr><h3 id="negone" tabindex="-1">negOne <a class="header-anchor" href="#negone" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>negOne</strong>(): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>(-1, -1)</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3408</p><hr><h3 id="one" tabindex="-1">one <a class="header-anchor" href="#one" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>one</strong>(): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>(1, 1)</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3404</p><hr><h3 id="unitx" tabindex="-1">unitX <a class="header-anchor" href="#unitx" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>unitX</strong>(): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>(1, 0)</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3412</p><hr><h3 id="unity" tabindex="-1">unitY <a class="header-anchor" href="#unity" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>unitY</strong>(): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>(0, 1)</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><h4 id="defined-in-13" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3416</p><hr><h3 id="zero" tabindex="-1">zero <a class="header-anchor" href="#zero" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>zero</strong>(): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>(0, 0)</p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><h4 id="defined-in-14" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3400</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-hidden="true">#</a></h2><h3 id="add" tabindex="-1">add <a class="header-anchor" href="#add" aria-hidden="true">#</a></h3><p>▸ <strong>add</strong>(<code>v</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>加一个向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:相加的向量对象</td></tr></tbody></table><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>修改后的自身对象</p><h4 id="defined-in-15" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3801</p><hr><h3 id="clone" tabindex="-1">clone <a class="header-anchor" href="#clone" aria-hidden="true">#</a></h3><p>▸ <strong>clone</strong>(): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>克隆当前向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>克隆得到的新 Vector2 对象</p><h4 id="defined-in-16" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3900</p><hr><h3 id="divide" tabindex="-1">divide <a class="header-anchor" href="#divide" aria-hidden="true">#</a></h3><p>▸ <strong>divide</strong>(<code>v</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>每个分量除以参数</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:相除的向量对象</td></tr></tbody></table><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>修改后的自身对象</p><h4 id="defined-in-17" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3829</p><p>▸ <strong>divide</strong>(<code>v</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>除以一个向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:每个分量除以的参数</td></tr></tbody></table><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>修改后的自身对象</p><h4 id="defined-in-18" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3836</p><hr><h3 id="equals" tabindex="-1">equals <a class="header-anchor" href="#equals" aria-hidden="true">#</a></h3><p>▸ <strong>equals</strong>(<code>other</code>, <code>epsilon?</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>判断当前向量是否在误差范围内与指定向量相等</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>other</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:指定向量</td></tr><tr><td style="text-align:left;"><code>epsilon?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:最小误差数 default:1.e-8</td></tr></tbody></table><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>两向量是否相等</p><h4 id="defined-in-19" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3894</p><hr><h3 id="fromstring" tabindex="-1">fromString <a class="header-anchor" href="#fromstring" aria-hidden="true">#</a></h3><p>▸ <strong>fromString</strong>(<code>str</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>读取字符串数据</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">usage:读取的字符</td></tr></tbody></table><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-20" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-20" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3842</p><hr><h3 id="multiply" tabindex="-1">multiply <a class="header-anchor" href="#multiply" aria-hidden="true">#</a></h3><p>▸ <strong>multiply</strong>(<code>v</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>乘以一个向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:相乘的向量对象</td></tr></tbody></table><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>修改后的自身对象</p><h4 id="defined-in-21" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3815</p><p>▸ <strong>multiply</strong>(<code>v</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>每个分量乘以参数</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:每个分量乘以的参数</td></tr></tbody></table><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>修改后的自身对象</p><h4 id="defined-in-22" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-22" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3822</p><hr><h3 id="normalize" tabindex="-1">normalize <a class="header-anchor" href="#normalize" aria-hidden="true">#</a></h3><p>▸ <strong>normalize</strong>(): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>将当前向量归一化</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>归一化后的自身对象</p><h4 id="defined-in-23" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-23" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3906</p><hr><h3 id="set" tabindex="-1">set <a class="header-anchor" href="#set" aria-hidden="true">#</a></h3><p>▸ <strong>set</strong>(<code>other</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>设置当前向量使其与指定向量相等</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>other</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:指定的向量</td></tr></tbody></table><h4 id="returns-20" tabindex="-1">Returns <a class="header-anchor" href="#returns-20" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><code>this</code></p><h4 id="defined-in-24" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-24" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3786</p><p>▸ <strong>set</strong>(<code>x?</code>, <code>y?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>设置当前向量的具体分量值</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:x 分量 default:0.0</td></tr><tr><td style="text-align:left;"><code>y?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:y 分量 default:0.0</td></tr></tbody></table><h4 id="returns-21" tabindex="-1">Returns <a class="header-anchor" href="#returns-21" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><code>this</code></p><h4 id="defined-in-25" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3794</p><hr><h3 id="strictequals" tabindex="-1">strictEquals <a class="header-anchor" href="#strictequals" aria-hidden="true">#</a></h3><p>▸ <strong>strictEquals</strong>(<code>other</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>判断当前向量是否与指定向量相等</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>other</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:指定向量</td></tr></tbody></table><h4 id="returns-22" tabindex="-1">Returns <a class="header-anchor" href="#returns-22" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>两向量是否相等</p><h4 id="defined-in-26" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-26" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3886</p><hr><h3 id="subtract" tabindex="-1">subtract <a class="header-anchor" href="#subtract" aria-hidden="true">#</a></h3><p>▸ <strong>subtract</strong>(<code>v</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>减去一个向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:相减的向量对象</td></tr></tbody></table><h4 id="returns-23" tabindex="-1">Returns <a class="header-anchor" href="#returns-23" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>修改后的自身对象</p><h4 id="defined-in-27" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3808</p><hr><h3 id="tostring" tabindex="-1">toString <a class="header-anchor" href="#tostring" aria-hidden="true">#</a></h3><p>▸ <strong>toString</strong>(): <code>string</code></p><p><strong><code>Description</code></strong></p><p>输出为字符串</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-24" tabindex="-1">Returns <a class="header-anchor" href="#returns-24" aria-hidden="true">#</a></h4><p><code>string</code></p><p>向量值字符串</p><h4 id="defined-in-28" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-28" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3848</p><hr><h3 id="add-1" tabindex="-1">add <a class="header-anchor" href="#add-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>add</strong>(<code>a</code>, <code>b</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>计算 ab 两个向量相加</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-25" tabindex="-1">Returns <a class="header-anchor" href="#returns-25" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>相加的结果 Vector2 对象</p><h4 id="defined-in-29" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-29" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3444</p><hr><h3 id="angle" tabindex="-1">angle <a class="header-anchor" href="#angle" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>angle</strong>(<code>a</code>, <code>b</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>求两向量夹角角度</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr></tbody></table><h4 id="returns-26" tabindex="-1">Returns <a class="header-anchor" href="#returns-26" aria-hidden="true">#</a></h4><p><code>number</code></p><p>向量 a 与向量 b 的夹角角度</p><h4 id="defined-in-30" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-30" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3722</p><hr><h3 id="ceil" tabindex="-1">ceil <a class="header-anchor" href="#ceil" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>ceil</strong>(<code>a</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>逐元素向量向上取整</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-15" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-27" tabindex="-1">Returns <a class="header-anchor" href="#returns-27" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>逐元素向上取整后的 Vector2 对象</p><h4 id="defined-in-31" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-31" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3546</p><hr><h3 id="clamp" tabindex="-1">clamp <a class="header-anchor" href="#clamp" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>clamp</strong>(<code>v</code>, <code>min</code>, <code>max</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>设置当前向量的值, 使其各个分量都处于指定的范围内</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-16" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 v</td></tr><tr><td style="text-align:left;"><code>min</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:最小值</td></tr><tr><td style="text-align:left;"><code>max</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:最大值</td></tr></tbody></table><h4 id="returns-28" tabindex="-1">Returns <a class="header-anchor" href="#returns-28" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>修改后的向量 v</p><h4 id="defined-in-32" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-32" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3760</p><hr><h3 id="clone-1" tabindex="-1">clone <a class="header-anchor" href="#clone-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>clone</strong>(<code>a</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>克隆向量 a 得到的新 Vector2 向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-17" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr></tbody></table><h4 id="returns-29" tabindex="-1">Returns <a class="header-anchor" href="#returns-29" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>克隆得到的新 Vector2 向量</p><h4 id="defined-in-33" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-33" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3501</p><hr><h3 id="copy" tabindex="-1">copy <a class="header-anchor" href="#copy" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>copy</strong>(<code>a</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>获得指定向量的拷贝</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-18" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-30" tabindex="-1">Returns <a class="header-anchor" href="#returns-30" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>拷贝得到的 Vector2 向量</p><h4 id="defined-in-34" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-34" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3510</p><hr><h3 id="cross" tabindex="-1">cross <a class="header-anchor" href="#cross" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>cross</strong>(<code>a</code>, <code>b</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>向量叉积 (向量积)</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>注意二维向量的叉积为与 Z 轴平行的三维向量, 此处以向量的模长表示</p><h4 id="parameters-19" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr></tbody></table><h4 id="returns-31" tabindex="-1">Returns <a class="header-anchor" href="#returns-31" aria-hidden="true">#</a></h4><p><code>number</code></p><p>叉积</p><h4 id="defined-in-35" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-35" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3666</p><hr><h3 id="distance" tabindex="-1">distance <a class="header-anchor" href="#distance" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>distance</strong>(<code>a</code>, <code>b</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>求两向量的欧氏距离</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-20" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr></tbody></table><h4 id="returns-32" tabindex="-1">Returns <a class="header-anchor" href="#returns-32" aria-hidden="true">#</a></h4><p><code>number</code></p><p>两向量的欧氏距离</p><h4 id="defined-in-36" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-36" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3590</p><hr><h3 id="divide-1" tabindex="-1">divide <a class="header-anchor" href="#divide-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>divide</strong>(<code>a</code>, <code>b</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>遍历向量 a 的每个分量除以 b</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-21" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-21" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-33" tabindex="-1">Returns <a class="header-anchor" href="#returns-33" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>相除的结果 Vector2 对象</p><h4 id="defined-in-37" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-37" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3484</p><p>▸ <code>Static</code> <strong>divide</strong>(<code>a</code>, <code>b</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>计算向量 a 除以向量 b</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-22" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-22" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-34" tabindex="-1">Returns <a class="header-anchor" href="#returns-34" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>相除的结果 Vector2 对象</p><h4 id="defined-in-38" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-38" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3494</p><hr><h3 id="dot" tabindex="-1">dot <a class="header-anchor" href="#dot" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>dot</strong>(<code>a</code>, <code>b</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>向量点积 (数量积)</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-23" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-23" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr></tbody></table><h4 id="returns-35" tabindex="-1">Returns <a class="header-anchor" href="#returns-35" aria-hidden="true">#</a></h4><p><code>number</code></p><p>点积</p><h4 id="defined-in-39" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-39" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3657</p><hr><h3 id="equals-1" tabindex="-1">equals <a class="header-anchor" href="#equals-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>equals</strong>(<code>a</code>, <code>b</code>, <code>epsilon?</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>排除浮点数误差的向量近似等价判断</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-24" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-24" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>epsilon?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:最小误差数 default:Util.MathUtil.EPSILON</td></tr></tbody></table><h4 id="returns-36" tabindex="-1">Returns <a class="header-anchor" href="#returns-36" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>是否相等</p><h4 id="defined-in-40" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-40" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3519</p><hr><h3 id="floor" tabindex="-1">floor <a class="header-anchor" href="#floor" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>floor</strong>(<code>a</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>逐元素向量向下取整</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-25" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-37" tabindex="-1">Returns <a class="header-anchor" href="#returns-37" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>逐元素向下取整后的 Vector2 对象</p><h4 id="defined-in-41" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-41" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3555</p><hr><h3 id="fromstring-1" tabindex="-1">fromString <a class="header-anchor" href="#fromstring-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>fromString</strong>(<code>str</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>通过一个字符串创建 Vector2 对象</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-26" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-26" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">usage:传入的字符串</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-38" tabindex="-1">Returns <a class="header-anchor" href="#returns-38" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>创建的 Vector2 对象</p><h4 id="defined-in-42" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-42" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3434</p><hr><h3 id="fromuevector2d" tabindex="-1">fromUEVector2D <a class="header-anchor" href="#fromuevector2d" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>fromUEVector2D</strong>(<code>v</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>通过一个 UE 向量创建 Vector2 对象</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-27" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-27" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>Vector2D</code></td><td style="text-align:left;">usage:UE.Vector</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-39" tabindex="-1">Returns <a class="header-anchor" href="#returns-39" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>创建的 Vector2 对象</p><h4 id="defined-in-43" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-43" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3425</p><hr><h3 id="invert" tabindex="-1">invert <a class="header-anchor" href="#invert" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>invert</strong>(<code>a</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>逐元素向量取倒数, 接近 0 时返回 Infinity</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-28" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-28" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-40" tabindex="-1">Returns <a class="header-anchor" href="#returns-40" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>逐元素取倒数得到的 Vector2 对象</p><h4 id="defined-in-44" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-44" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3630</p><hr><h3 id="invertsafe" tabindex="-1">invertSafe <a class="header-anchor" href="#invertsafe" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>invertSafe</strong>(<code>a</code>, <code>outer?</code>, <code>epsilon?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>逐元素向量取倒数, 接近 0 时返回 0</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-29" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-29" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr><tr><td style="text-align:left;"><code>epsilon?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:最小误差数 default:Util.MathUtil.EPSILON</td></tr></tbody></table><h4 id="returns-41" tabindex="-1">Returns <a class="header-anchor" href="#returns-41" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>逐元素取倒数得到的 Vector2 对象</p><h4 id="defined-in-45" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-45" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3640</p><hr><h3 id="lerp" tabindex="-1">lerp <a class="header-anchor" href="#lerp" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>lerp</strong>(<code>a</code>, <code>b</code>, <code>t</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>逐元素向量线性插值： A + t * (B - A)</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-30" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-30" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>t</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:插值</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-42" tabindex="-1">Returns <a class="header-anchor" href="#returns-42" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>线性插值得到的 Vector2 对象</p><h4 id="defined-in-46" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-46" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3677</p><hr><h3 id="magnitude-1" tabindex="-1">magnitude <a class="header-anchor" href="#magnitude-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>magnitude</strong>(<code>a</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>求向量长度</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-31" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-31" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr></tbody></table><h4 id="returns-43" tabindex="-1">Returns <a class="header-anchor" href="#returns-43" aria-hidden="true">#</a></h4><p><code>number</code></p><p>向量长度</p><h4 id="defined-in-47" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-47" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3605</p><hr><h3 id="max" tabindex="-1">max <a class="header-anchor" href="#max" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>max</strong>(<code>a</code>, <code>b</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>逐元素向量最大值</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-32" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-32" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-44" tabindex="-1">Returns <a class="header-anchor" href="#returns-44" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>逐元素取最大值后的 Vector2 对象</p><h4 id="defined-in-48" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-48" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3574</p><hr><h3 id="min" tabindex="-1">min <a class="header-anchor" href="#min" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>min</strong>(<code>a</code>, <code>b</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>逐元素向量最小值</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-33" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-33" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-45" tabindex="-1">Returns <a class="header-anchor" href="#returns-45" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>逐元素取最小值后的 Vector2 对象</p><h4 id="defined-in-49" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-49" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3565</p><hr><h3 id="movetowards" tabindex="-1">moveTowards <a class="header-anchor" href="#movetowards" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>moveTowards</strong>(<code>current</code>, <code>target</code>, <code>maxDistanceDelta</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>向目标移动</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-34" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-34" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>current</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:当前向量</td></tr><tr><td style="text-align:left;"><code>target</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:目标向量</td></tr><tr><td style="text-align:left;"><code>maxDistanceDelta</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:最大移动距离</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-46" tabindex="-1">Returns <a class="header-anchor" href="#returns-46" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>移动后的得到的 Vector2 对象</p><h4 id="defined-in-50" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-50" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3688</p><hr><h3 id="multiply-1" tabindex="-1">multiply <a class="header-anchor" href="#multiply-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>multiply</strong>(<code>a</code>, <code>b</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>遍历向量 a 的每个分量乘以 b</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-35" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-35" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-47" tabindex="-1">Returns <a class="header-anchor" href="#returns-47" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>相乘的结果 Vector2 对象</p><h4 id="defined-in-51" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-51" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3464</p><p>▸ <code>Static</code> <strong>multiply</strong>(<code>a</code>, <code>b</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>计算向量 a 乘以向量 b</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-36" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-36" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-48" tabindex="-1">Returns <a class="header-anchor" href="#returns-48" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>相乘的结果 Vector2 对象</p><h4 id="defined-in-52" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-52" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3474</p><hr><h3 id="negate" tabindex="-1">negate <a class="header-anchor" href="#negate" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>negate</strong>(<code>a</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>逐元素向量取负</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-37" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-37" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-49" tabindex="-1">Returns <a class="header-anchor" href="#returns-49" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>逐元素向量取负得到的 Vector2 对象</p><h4 id="defined-in-53" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-53" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3621</p><hr><h3 id="normalize-1" tabindex="-1">normalize <a class="header-anchor" href="#normalize-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>normalize</strong>(<code>a</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>归一化向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-38" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-38" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-50" tabindex="-1">Returns <a class="header-anchor" href="#returns-50" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>归一化后得到的 Vector2 对象</p><h4 id="defined-in-54" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-54" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3649</p><hr><h3 id="project" tabindex="-1">project <a class="header-anchor" href="#project" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>project</strong>(<code>a</code>, <code>b</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>计算向量 a 在向量 b 上的投影向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-39" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-39" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-51" tabindex="-1">Returns <a class="header-anchor" href="#returns-51" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>投影向量</p><h4 id="defined-in-55" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-55" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3751</p><hr><h3 id="random" tabindex="-1">random <a class="header-anchor" href="#random" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>random</strong>(<code>range?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>生成一个在单位圆上均匀分布的随机 Vector2 对象</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-40" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-40" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>range?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:范围 default:1.0</td></tr></tbody></table><h4 id="returns-52" tabindex="-1">Returns <a class="header-anchor" href="#returns-52" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>得到的随机 Vector2 对象</p><h4 id="defined-in-56" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-56" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3714</p><hr><h3 id="reflect" tabindex="-1">reflect <a class="header-anchor" href="#reflect" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>reflect</strong>(<code>inDirection</code>, <code>inNormal</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>求反射角</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-41" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-41" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>inDirection</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:入射向量</td></tr><tr><td style="text-align:left;"><code>inNormal</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:法线向量</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-53" tabindex="-1">Returns <a class="header-anchor" href="#returns-53" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>反射角</p><h4 id="defined-in-57" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-57" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3703</p><hr><h3 id="rotate" tabindex="-1">rotate <a class="header-anchor" href="#rotate" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>rotate</strong>(<code>v</code>, <code>radians</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>计算向量 a 旋转 radians 度后的向量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-42" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-42" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 v</td></tr><tr><td style="text-align:left;"><code>radians</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:旋转角度</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-54" tabindex="-1">Returns <a class="header-anchor" href="#returns-54" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>旋转后的 Vector2 对象</p><h4 id="defined-in-58" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-58" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3741</p><hr><h3 id="round" tabindex="-1">round <a class="header-anchor" href="#round" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>round</strong>(<code>a</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>逐元素向量四舍五入取整</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-43" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-43" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-55" tabindex="-1">Returns <a class="header-anchor" href="#returns-55" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>逐逐元素向量四舍五入取整后的 Vector2 对象</p><h4 id="defined-in-59" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-59" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3582</p><hr><h3 id="set-1" tabindex="-1">set <a class="header-anchor" href="#set-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>set</strong>(<code>a</code>, <code>x</code>, <code>y</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>设置向量 a 的值</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>向量 a 不能为空对象</p><h4 id="parameters-44" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-44" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:修改的 x 值</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:修改的 y 值</td></tr></tbody></table><h4 id="returns-56" tabindex="-1">Returns <a class="header-anchor" href="#returns-56" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>修改后的 Vector2 对象</p><h4 id="defined-in-60" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-60" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3537</p><hr><h3 id="signangle" tabindex="-1">signAngle <a class="header-anchor" href="#signangle" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>signAngle</strong>(<code>a</code>, <code>b</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>获取向量 a 和向量 b 之间的有符号角度</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>有符号角度的取值范围为 (-180, 180], 当前向量可以通过逆时针旋转有符号角度与指定向量同向 <br></p><h4 id="parameters-45" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-45" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr></tbody></table><h4 id="returns-57" tabindex="-1">Returns <a class="header-anchor" href="#returns-57" aria-hidden="true">#</a></h4><p><code>number</code></p><p>向量 a 和向量 b 之间的有符号角度</p><h4 id="defined-in-61" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-61" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3731</p><hr><h3 id="sqrmagnitude-1" tabindex="-1">sqrMagnitude <a class="header-anchor" href="#sqrmagnitude-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>sqrMagnitude</strong>(<code>a</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>求向量长度平方</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-46" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-46" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr></tbody></table><h4 id="returns-58" tabindex="-1">Returns <a class="header-anchor" href="#returns-58" aria-hidden="true">#</a></h4><p><code>number</code></p><p>向量长度平方</p><h4 id="defined-in-62" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-62" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3612</p><hr><h3 id="squareddistance" tabindex="-1">squaredDistance <a class="header-anchor" href="#squareddistance" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>squaredDistance</strong>(<code>a</code>, <code>b</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>求两向量的欧氏距离平方</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-47" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-47" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr></tbody></table><h4 id="returns-59" tabindex="-1">Returns <a class="header-anchor" href="#returns-59" aria-hidden="true">#</a></h4><p><code>number</code></p><p>两向量的欧氏距离平方</p><h4 id="defined-in-63" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-63" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3598</p><hr><h3 id="strictequals-1" tabindex="-1">strictEquals <a class="header-anchor" href="#strictequals-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>strictEquals</strong>(<code>a</code>, <code>b</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>向量等价判断</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-48" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-48" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr></tbody></table><h4 id="returns-60" tabindex="-1">Returns <a class="header-anchor" href="#returns-60" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>是否相等</p><h4 id="defined-in-64" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-64" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3527</p><hr><h3 id="subtract-1" tabindex="-1">subtract <a class="header-anchor" href="#subtract-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>subtract</strong>(<code>a</code>, <code>b</code>, <code>outer?</code>): <a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p><strong><code>Description</code></strong></p><p>计算向量 a 减去向量 b</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>如果 outer 不为空, 返回 outer,否则返回一个新的 Vector 对象, 建议传入 outer 来减少 new 对象且 outer 不能为 null/undefined</p><h4 id="parameters-49" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-49" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 a</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:向量 b</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></td><td style="text-align:left;">usage:接收结果的 Vector2 对象 default:null</td></tr></tbody></table><h4 id="returns-61" tabindex="-1">Returns <a class="header-anchor" href="#returns-61" aria-hidden="true">#</a></h4><p><a href="./Type.Type.Vector2.html"><code>Vector2</code></a></p><p>相减的结果 Vector2 对象</p><h4 id="defined-in-65" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-65" aria-hidden="true">#</a></h4><p>Type/index.d.ts:3454</p>',900),n=[o];function i(l,c,h,s,p,f){return d(),t("div",null,n)}const u=e(a,[["render",i]]);export{g as __pageData,u as default};
