import{_ as e,c as t,o as r,a}from"./app.8e21f956.js";const y=JSON.parse('{"title":"Class: LinearColor","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Accessors","slug":"accessors","link":"#accessors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]}]},{"level":2,"title":"Constructors","slug":"constructors-1","link":"#constructors-1","children":[{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]}]},{"level":2,"title":"Accessors","slug":"accessors-1","link":"#accessors-1","children":[{"level":3,"title":"a","slug":"a","link":"#a","children":[]},{"level":3,"title":"b","slug":"b","link":"#b","children":[]},{"level":3,"title":"g","slug":"g","link":"#g","children":[]},{"level":3,"title":"r","slug":"r","link":"#r","children":[]},{"level":3,"title":"black","slug":"black","link":"#black","children":[]},{"level":3,"title":"blue","slug":"blue","link":"#blue","children":[]},{"level":3,"title":"gray","slug":"gray","link":"#gray","children":[]},{"level":3,"title":"green","slug":"green","link":"#green","children":[]},{"level":3,"title":"red","slug":"red","link":"#red","children":[]},{"level":3,"title":"white","slug":"white","link":"#white","children":[]},{"level":3,"title":"yellow","slug":"yellow","link":"#yellow","children":[]}]},{"level":2,"title":"Methods","slug":"methods-1","link":"#methods-1","children":[{"level":3,"title":"addition","slug":"addition","link":"#addition","children":[]},{"level":3,"title":"division","slug":"division","link":"#division","children":[]},{"level":3,"title":"equality","slug":"equality","link":"#equality","children":[]},{"level":3,"title":"fromString","slug":"fromstring","link":"#fromstring","children":[]},{"level":3,"title":"inequality","slug":"inequality","link":"#inequality","children":[]},{"level":3,"title":"multiply","slug":"multiply","link":"#multiply","children":[]},{"level":3,"title":"subtraction","slug":"subtraction","link":"#subtraction","children":[]},{"level":3,"title":"toString","slug":"tostring","link":"#tostring","children":[]},{"level":3,"title":"colorHexToLinearColor","slug":"colorhextolinearcolor","link":"#colorhextolinearcolor","children":[]},{"level":3,"title":"colorHsvToLinearColor","slug":"colorhsvtolinearcolor","link":"#colorhsvtolinearcolor","children":[]},{"level":3,"title":"colorToLinearColor","slug":"colortolinearcolor","link":"#colortolinearcolor","children":[]},{"level":3,"title":"fromString","slug":"fromstring-1","link":"#fromstring-1","children":[]},{"level":3,"title":"makeFromHSV","slug":"makefromhsv","link":"#makefromhsv","children":[]},{"level":3,"title":"random","slug":"random","link":"#random","children":[]}]}],"relativePath":"classes/Type.Type.LinearColor.md"}'),d={name:"classes/Type.Type.LinearColor.md"},o=a('<p><a href="./../README.html">auto-mwapi-lib</a> / <a href="./../modules.html">Exports</a> / <a href="./../modules/Type.html">Type</a> / <a href="./../modules/Type.Type.html">Type</a> / LinearColor</p><h1 id="class-linearcolor" tabindex="-1">Class: LinearColor <a class="header-anchor" href="#class-linearcolor" aria-hidden="true">#</a></h1><p><a href="./../modules/Type.html">Type</a>.<a href="./../modules/Type.Type.html">Type</a>.LinearColor</p><p><strong><code>Author</code></strong></p><p>SuoWei</p><p><strong><code>Description</code></strong></p><p>线性 RGBA 颜色</p><p><strong><code>Network Status</code></strong></p><p>usage:双端</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.LinearColor.html#constructor">constructor</a></li></ul><h3 id="accessors" tabindex="-1">Accessors <a class="header-anchor" href="#accessors" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.LinearColor.html#a">a</a></li><li><a href="./Type.Type.LinearColor.html#b">b</a></li><li><a href="./Type.Type.LinearColor.html#g">g</a></li><li><a href="./Type.Type.LinearColor.html#r">r</a></li><li><a href="./Type.Type.LinearColor.html#black">black</a></li><li><a href="./Type.Type.LinearColor.html#blue">blue</a></li><li><a href="./Type.Type.LinearColor.html#gray">gray</a></li><li><a href="./Type.Type.LinearColor.html#green">green</a></li><li><a href="./Type.Type.LinearColor.html#red">red</a></li><li><a href="./Type.Type.LinearColor.html#white">white</a></li><li><a href="./Type.Type.LinearColor.html#yellow">yellow</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.LinearColor.html#addition">addition</a></li><li><a href="./Type.Type.LinearColor.html#division">division</a></li><li><a href="./Type.Type.LinearColor.html#equality">equality</a></li><li><a href="./Type.Type.LinearColor.html#fromstring">fromString</a></li><li><a href="./Type.Type.LinearColor.html#inequality">inequality</a></li><li><a href="./Type.Type.LinearColor.html#multiply">multiply</a></li><li><a href="./Type.Type.LinearColor.html#subtraction">subtraction</a></li><li><a href="./Type.Type.LinearColor.html#tostring">toString</a></li><li><a href="./Type.Type.LinearColor.html#colorhextolinearcolor">colorHexToLinearColor</a></li><li><a href="./Type.Type.LinearColor.html#colorhsvtolinearcolor">colorHsvToLinearColor</a></li><li><a href="./Type.Type.LinearColor.html#colortolinearcolor">colorToLinearColor</a></li><li><a href="./Type.Type.LinearColor.html#fromstring-1">fromString</a></li><li><a href="./Type.Type.LinearColor.html#makefromhsv">makeFromHSV</a></li><li><a href="./Type.Type.LinearColor.html#random">random</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h3><p>• <strong>new LinearColor</strong>(<code>r</code>, <code>g</code>, <code>b</code>)</p><p><strong><code>Description</code></strong></p><p>用给定的 r, g, b 值构建一个新的 Color</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>r</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:r</td></tr><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:g</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:b</td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p>Type/index.d.ts:938</p><p>• <strong>new LinearColor</strong>(<code>r</code>, <code>g</code>, <code>b</code>, <code>a</code>)</p><p><strong><code>Description</code></strong></p><p>用给定的 r, g, b ,a 值构建一个新的 Color</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>r</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:r</td></tr><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:g</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:b</td></tr><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:a</td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p>Type/index.d.ts:946</p><p>• <strong>new LinearColor</strong>(<code>v</code>)</p><p><strong><code>Description</code></strong></p><p>用给定的 Vector 对象构建一个新的 LinearColor</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><a href="./Type.Type.Vector.html"><code>Vector</code></a></td><td style="text-align:left;">usage:Vector 对象</td></tr></tbody></table><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p>Type/index.d.ts:951</p><p>• <strong>new LinearColor</strong>(<code>c</code>)</p><p><strong><code>Description</code></strong></p><p>用给定的 LinearColor 构建一个新的 LinearColor</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>c</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:Vector 对象</td></tr></tbody></table><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p>Type/index.d.ts:956</p><h2 id="accessors-1" tabindex="-1">Accessors <a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a></h2><h3 id="a" tabindex="-1">a <a class="header-anchor" href="#a" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>a</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>获取当前 LinearColor 的 a 值</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>number</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1067</p><p>• <code>set</code> <strong>a</strong>(<code>v</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>设置当前 LinearColor 的 a 值</p><p><strong><code>Precautions</code></strong></p><p>颜色值的有效范围是 0.0 &lt;= value &lt;= 1.0</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1072</p><hr><h3 id="b" tabindex="-1">b <a class="header-anchor" href="#b" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>b</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>获取当前 LinearColor 的 b 值</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>number</code></p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1058</p><p>• <code>set</code> <strong>b</strong>(<code>v</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>设置当前 LinearColor 的 b 值</p><p><strong><code>Precautions</code></strong></p><p>颜色值的有效范围是 0.0 &lt;= value &lt;= 1.0</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1063</p><hr><h3 id="g" tabindex="-1">g <a class="header-anchor" href="#g" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>g</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>获取当前 LinearColor 的 g 值</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p><code>number</code></p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1049</p><p>• <code>set</code> <strong>g</strong>(<code>v</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>设置当前 LinearColor 的 g 值 颜色值的有效范围是</p><p><strong><code>Precautions</code></strong></p><p>0.0 &lt;= value &lt;= 1.0</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1054</p><hr><h3 id="r" tabindex="-1">r <a class="header-anchor" href="#r" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>r</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>获取当前 LinearColor 的 r 值</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-hidden="true">#</a></h4><p><code>number</code></p><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1040</p><p>• <code>set</code> <strong>r</strong>(<code>v</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>设置当前 LinearColor 的 r 值</p><p><strong><code>Precautions</code></strong></p><p>颜色值的有效范围是 0.0 &lt;= value &lt;= 1.0</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1045</p><hr><h3 id="black" tabindex="-1">black <a class="header-anchor" href="#black" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>black</strong>(): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>黑色 (0, 0, 0, 1)</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1084</p><hr><h3 id="blue" tabindex="-1">blue <a class="header-anchor" href="#blue" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>blue</strong>(): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>蓝色 (0, 0, 1, 1)</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><h4 id="defined-in-13" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1096</p><hr><h3 id="gray" tabindex="-1">gray <a class="header-anchor" href="#gray" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>gray</strong>(): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>灰色 (0.5, 0.5, 0.5, 1)</p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><h4 id="defined-in-14" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1080</p><hr><h3 id="green" tabindex="-1">green <a class="header-anchor" href="#green" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>green</strong>(): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>绿色 (0, 1, 0, 1)</p><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><h4 id="defined-in-15" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1092</p><hr><h3 id="red" tabindex="-1">red <a class="header-anchor" href="#red" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>red</strong>(): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>红色 (1, 0, 0, 1)</p><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><h4 id="defined-in-16" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1088</p><hr><h3 id="white" tabindex="-1">white <a class="header-anchor" href="#white" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>white</strong>(): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>白色 (1, 1, 1, 1)</p><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><h4 id="defined-in-17" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1076</p><hr><h3 id="yellow" tabindex="-1">yellow <a class="header-anchor" href="#yellow" aria-hidden="true">#</a></h3><p>• <code>Static</code> <code>get</code> <strong>yellow</strong>(): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>黄色 (1, 1, 0, 1)</p><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><h4 id="defined-in-18" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1100</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-hidden="true">#</a></h2><h3 id="addition" tabindex="-1">addition <a class="header-anchor" href="#addition" aria-hidden="true">#</a></h3><p>▸ <strong>addition</strong>(<code>linearColorB</code>, <code>outer?</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>颜色值相加</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>建议传入 outer 来减少 new 对象</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>linearColorB</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:相加的颜色 B</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:接收结果的 LinearColor 对象 default:null</td></tr></tbody></table><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>如果 outer 不为空, 返回 outer, 否则返回一个新的 LinearColor 对象</p><h4 id="defined-in-19" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1117</p><hr><h3 id="division" tabindex="-1">division <a class="header-anchor" href="#division" aria-hidden="true">#</a></h3><p>▸ <strong>division</strong>(<code>linearColorB</code>, <code>outer?</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>颜色值相除</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>建议传入 outer 来减少 new 对象</p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>linearColorB</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:相除的颜色 B</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:接收结果的 LinearColor 对象 default:null</td></tr></tbody></table><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>如果 outer 不为空, 返回 outer, 否则返回一个新的 LinearColor 对象</p><h4 id="defined-in-20" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-20" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1144</p><hr><h3 id="equality" tabindex="-1">equality <a class="header-anchor" href="#equality" aria-hidden="true">#</a></h3><p>▸ <strong>equality</strong>(<code>linearColorB</code>, <code>epsilon?</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>判断两个颜色值是否相等</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>相等返回 true，不相等返回 false</p><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>linearColorB</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:对比的颜色 B</td></tr><tr><td style="text-align:left;"><code>epsilon?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:最小误差数 default:Util.MathUtil.EPSILON</td></tr></tbody></table><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>是否相等</p><h4 id="defined-in-21" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1153</p><hr><h3 id="fromstring" tabindex="-1">fromString <a class="header-anchor" href="#fromstring" aria-hidden="true">#</a></h3><p>▸ <strong>fromString</strong>(<code>str</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>用数据填充对象</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">usage:数据字符串</td></tr></tbody></table><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-22" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-22" aria-hidden="true">#</a></h4><p>Type/index.d.ts:962</p><hr><h3 id="inequality" tabindex="-1">inequality <a class="header-anchor" href="#inequality" aria-hidden="true">#</a></h3><p>▸ <strong>inequality</strong>(<code>linearColorB</code>, <code>epsilon?</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>判断两个颜色值是否不相等</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>不相等返回 true，相等返回 false</p><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>linearColorB</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:对比的颜色 B</td></tr><tr><td style="text-align:left;"><code>epsilon?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:最小误差数 default:Util.MathUtil.EPSILON</td></tr></tbody></table><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>是否相等</p><h4 id="defined-in-23" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-23" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1162</p><hr><h3 id="multiply" tabindex="-1">multiply <a class="header-anchor" href="#multiply" aria-hidden="true">#</a></h3><p>▸ <strong>multiply</strong>(<code>linearColorB</code>, <code>outer?</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>颜色值相乘</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>建议传入 outer 来减少 new 对象</p><h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>linearColorB</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:相乘的颜色 B</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:接收结果的 LinearColor 对象 default:null</td></tr></tbody></table><h4 id="returns-20" tabindex="-1">Returns <a class="header-anchor" href="#returns-20" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>如果 outer 不为空, 返回 outer, 否则返回一个新的 LinearColor 对象</p><h4 id="defined-in-24" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-24" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1135</p><hr><h3 id="subtraction" tabindex="-1">subtraction <a class="header-anchor" href="#subtraction" aria-hidden="true">#</a></h3><p>▸ <strong>subtraction</strong>(<code>linearColorB</code>, <code>outer?</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>颜色值相减</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>建议传入 outer 来减少 new 对象</p><h4 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>linearColorB</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:相减的颜色 B</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:接收结果的 LinearColor 对象 default:null</td></tr></tbody></table><h4 id="returns-21" tabindex="-1">Returns <a class="header-anchor" href="#returns-21" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>如果 outer 不为空, 返回 outer, 否则返回一个新的 LinearColor 对象</p><h4 id="defined-in-25" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1126</p><hr><h3 id="tostring" tabindex="-1">toString <a class="header-anchor" href="#tostring" aria-hidden="true">#</a></h3><p>▸ <strong>toString</strong>(): <code>string</code></p><p><strong><code>Description</code></strong></p><p>以字符串的形式输出对象属性</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-22" tabindex="-1">Returns <a class="header-anchor" href="#returns-22" aria-hidden="true">#</a></h4><p><code>string</code></p><p>对象属性字符串</p><h4 id="defined-in-26" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-26" aria-hidden="true">#</a></h4><p>Type/index.d.ts:975</p><hr><h3 id="colorhextolinearcolor" tabindex="-1">colorHexToLinearColor <a class="header-anchor" href="#colorhextolinearcolor" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>colorHexToLinearColor</strong>(<code>inColorHex</code>, <code>outer?</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>将 HexColor 转化为 LinearColor</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>建议传入 outer 来减少 new 对象</p><h4 id="parameters-15" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>inColorHex</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">usage:HexColor 字符串</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:接收转化后的 LinearColor 的对象 default:null</td></tr></tbody></table><h4 id="returns-23" tabindex="-1">Returns <a class="header-anchor" href="#returns-23" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>LinerColor 对象</p><h4 id="defined-in-27" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1001</p><hr><h3 id="colorhsvtolinearcolor" tabindex="-1">colorHsvToLinearColor <a class="header-anchor" href="#colorhsvtolinearcolor" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>colorHsvToLinearColor</strong>(<code>h</code>, <code>s</code>, <code>v</code>, <code>outer?</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>将 HsvColor 转化为 LinearColor</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>建议传入 outer 来减少 new 对象</p><h4 id="parameters-16" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>h</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:色调</td></tr><tr><td style="text-align:left;"><code>s</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:饱和度</td></tr><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:明度</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:接收转换结果的 LinearColor 对象 default:null</td></tr></tbody></table><h4 id="returns-24" tabindex="-1">Returns <a class="header-anchor" href="#returns-24" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>如果 outer 不为空, 返回 outer, 否则返回一个新的 LinearColor 对象</p><h4 id="defined-in-28" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-28" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1015</p><hr><h3 id="colortolinearcolor" tabindex="-1">colorToLinearColor <a class="header-anchor" href="#colortolinearcolor" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>colorToLinearColor</strong>(<code>r</code>, <code>g</code>, <code>b</code>, <code>a?</code>, <code>outer?</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>转换 Color</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-17" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>r</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:r(0 ~255)</td></tr><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:g(0 ~255)</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:b(0 ~255)</td></tr><tr><td style="text-align:left;"><code>a?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:a(0 ~255) default:255</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:接收转换结果的 LinearColor 对象 default:null</td></tr></tbody></table><h4 id="returns-25" tabindex="-1">Returns <a class="header-anchor" href="#returns-25" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>如果 outer 不为空, 返回 outer, 否则返回一个新的 LinearColor 对象</p><h4 id="defined-in-29" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-29" aria-hidden="true">#</a></h4><p>Type/index.d.ts:986</p><hr><h3 id="fromstring-1" tabindex="-1">fromString <a class="header-anchor" href="#fromstring-1" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>fromString</strong>(<code>jsonStr</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>用数据生成一个新的对象</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-18" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>jsonStr</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">usage:数据字符串</td></tr></tbody></table><h4 id="returns-26" tabindex="-1">Returns <a class="header-anchor" href="#returns-26" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>新的 LinearColor 类型对象</p><h4 id="defined-in-30" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-30" aria-hidden="true">#</a></h4><p>Type/index.d.ts:969</p><hr><h3 id="makefromhsv" tabindex="-1">makeFromHSV <a class="header-anchor" href="#makefromhsv" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>makeFromHSV</strong>(<code>h</code>, <code>s</code>, <code>v</code>, <code>outer?</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>将字节色调饱和度亮度转换为 LinearColor</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>建议传入 outer 来减少 new 对象</p><h4 id="parameters-19" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>h</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:色调</td></tr><tr><td style="text-align:left;"><code>s</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:饱和度</td></tr><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage:明度</td></tr><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:接收转换结果的 LinearColor 对象 default:null</td></tr></tbody></table><h4 id="returns-27" tabindex="-1">Returns <a class="header-anchor" href="#returns-27" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>如果 outer 不为空, 返回 outer, 否则返回一个新的 LinearColor 对象</p><h4 id="defined-in-31" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-31" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1031</p><hr><h3 id="random" tabindex="-1">random <a class="header-anchor" href="#random" aria-hidden="true">#</a></h3><p>▸ <code>Static</code> <strong>random</strong>(<code>outer?</code>): <a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p><strong><code>Description</code></strong></p><p>返回具有随机 RGB 值和 Alpha 为 1.0 的新颜色</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>建议传入 outer 来减少 new 对象</p><h4 id="parameters-20" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>outer?</code></td><td style="text-align:left;"><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></td><td style="text-align:left;">usage:接收结果的 LinearColor 对象 default:null</td></tr></tbody></table><h4 id="returns-28" tabindex="-1">Returns <a class="header-anchor" href="#returns-28" aria-hidden="true">#</a></h4><p><a href="./Type.Type.LinearColor.html"><code>LinearColor</code></a></p><p>如果 outer 不为空, 返回 outer, 否则返回一个新的 LinearColor 对象</p><h4 id="defined-in-32" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-32" aria-hidden="true">#</a></h4><p>Type/index.d.ts:1108</p>',402),n=[o];function i(l,h,s,c,p,f){return r(),t("div",null,n)}const u=e(d,[["render",i]]);export{y as __pageData,u as default};
