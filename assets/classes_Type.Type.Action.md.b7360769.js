import{_ as e,c as t,o as a,a as d}from"./app.8e21f956.js";const g=JSON.parse('{"title":"Class: Action","description":"","frontmatter":{},"headers":[{"level":2,"title":"Hierarchy","slug":"hierarchy","link":"#hierarchy","children":[]},{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Accessors","slug":"accessors","link":"#accessors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]}]},{"level":2,"title":"Constructors","slug":"constructors-1","link":"#constructors-1","children":[{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]}]},{"level":2,"title":"Accessors","slug":"accessors-1","link":"#accessors-1","children":[{"level":3,"title":"count","slug":"count","link":"#count","children":[]}]},{"level":2,"title":"Methods","slug":"methods-1","link":"#methods-1","children":[{"level":3,"title":"add","slug":"add","link":"#add","children":[]},{"level":3,"title":"call","slug":"call","link":"#call","children":[]},{"level":3,"title":"clear","slug":"clear","link":"#clear","children":[]},{"level":3,"title":"includes","slug":"includes","link":"#includes","children":[]},{"level":3,"title":"remove","slug":"remove","link":"#remove","children":[]}]}],"relativePath":"classes/Type.Type.Action.md"}'),r={name:"classes/Type.Type.Action.md"},n=d('<p><a href="./../README.html">auto-mwapi-lib</a> / <a href="./../modules.html">Exports</a> / <a href="./../modules/Type.html">Type</a> / <a href="./../modules/Type.Type.html">Type</a> / Action</p><h1 id="class-action" tabindex="-1">Class: Action <a class="header-anchor" href="#class-action" aria-hidden="true">#</a></h1><p><a href="./../modules/Type.html">Type</a>.<a href="./../modules/Type.Type.html">Type</a>.Action</p><p><strong><code>Author</code></strong></p><p>huipeng.jia</p><p><strong><code>Description</code></strong></p><p>任意参数的代理</p><p><strong><code>Network Status</code></strong></p><p>usage: 双端</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a></h2><ul><li><p><strong><code>Action</code></strong></p><p>↳ <a href="./Type.Type.Action1.html"><code>Action1</code></a></p><p>↳ <a href="./Type.Type.Action2.html"><code>Action2</code></a></p><p>↳ <a href="./Type.Type.Action3.html"><code>Action3</code></a></p></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Action.html#constructor">constructor</a></li></ul><h3 id="accessors" tabindex="-1">Accessors <a class="header-anchor" href="#accessors" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Action.html#count">count</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h3><ul><li><a href="./Type.Type.Action.html#add">add</a></li><li><a href="./Type.Type.Action.html#call">call</a></li><li><a href="./Type.Type.Action.html#clear">clear</a></li><li><a href="./Type.Type.Action.html#includes">includes</a></li><li><a href="./Type.Type.Action.html#remove">remove</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h3><p>• <strong>new Action</strong>()</p><h2 id="accessors-1" tabindex="-1">Accessors <a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a></h2><h3 id="count" tabindex="-1">count <a class="header-anchor" href="#count" aria-hidden="true">#</a></h3><p>• <code>get</code> <strong>count</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>监听方法的数量</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>number</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p>Type/index.d.ts:838</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-hidden="true">#</a></h2><h3 id="add" tabindex="-1">add <a class="header-anchor" href="#add" aria-hidden="true">#</a></h3><p>▸ <strong>add</strong>(<code>fn</code>, <code>thisArg?</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>添加一个监听方法(有重复过滤)</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">usage: 方法</td></tr><tr><td style="text-align:left;"><code>thisArg?</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">usage: 域 default: undefined</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p>Type/index.d.ts:807</p><hr><h3 id="call" tabindex="-1">call <a class="header-anchor" href="#call" aria-hidden="true">#</a></h3><p>▸ <strong>call</strong>(<code>...params</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>执行</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...params</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">usage: 参数序列</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p>Type/index.d.ts:820</p><hr><h3 id="clear" tabindex="-1">clear <a class="header-anchor" href="#clear" aria-hidden="true">#</a></h3><p>▸ <strong>clear</strong>(): <code>void</code></p><p><strong><code>Description</code></strong></p><p>清除所有监听</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p>Type/index.d.ts:833</p><hr><h3 id="includes" tabindex="-1">includes <a class="header-anchor" href="#includes" aria-hidden="true">#</a></h3><p>▸ <strong>includes</strong>(<code>fn</code>, <code>thisArg</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>判断是否包含某个监听方法</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">usage: 方法</td></tr><tr><td style="text-align:left;"><code>thisArg</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">usage: 域</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>结果</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a></h4><p>Type/index.d.ts:828</p><hr><h3 id="remove" tabindex="-1">remove <a class="header-anchor" href="#remove" aria-hidden="true">#</a></h3><p>▸ <strong>remove</strong>(<code>fn</code>, <code>thisArg</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>移除一个监听方法</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">usage: 方法</td></tr><tr><td style="text-align:left;"><code>thisArg</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">usage: 域</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a></h4><p>Type/index.d.ts:814</p>',96),o=[n];function c(i,s,l,h,p,u){return a(),t("div",null,o)}const y=e(r,[["render",c]]);export{g as __pageData,y as default};
