import{_ as e,c as t,o as a,a as r}from"./app.8e21f956.js";const g=JSON.parse('{"title":"Class: Group","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":3,"title":"Methods","slug":"methods","link":"#methods","children":[]}]},{"level":2,"title":"Constructors","slug":"constructors-1","link":"#constructors-1","children":[{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]}]},{"level":2,"title":"Methods","slug":"methods-1","link":"#methods-1","children":[{"level":3,"title":"add","slug":"add","link":"#add","children":[]},{"level":3,"title":"getAll","slug":"getall","link":"#getall","children":[]},{"level":3,"title":"remove","slug":"remove","link":"#remove","children":[]},{"level":3,"title":"removeAll","slug":"removeall","link":"#removeall","children":[]},{"level":3,"title":"update","slug":"update","link":"#update","children":[]}]}],"relativePath":"classes/Util.Util.TweenUtil.Group.md"}'),n={name:"classes/Util.Util.TweenUtil.Group.md"},l=r(`<p><a href="./../README.html">auto-mwapi-lib</a> / <a href="./../modules.html">Exports</a> / <a href="./../modules/Util.html">Util</a> / <a href="./../modules/Util.Util.html">Util</a> / <a href="./../modules/Util.Util.TweenUtil.html">TweenUtil</a> / Group</p><h1 id="class-group" tabindex="-1">Class: Group <a class="header-anchor" href="#class-group" aria-hidden="true">#</a></h1><p><a href="./../modules/Util.Util.html">Util</a>.<a href="./../modules/Util.Util.TweenUtil.html">TweenUtil</a>.Group</p><p><strong><code>Author</code></strong></p><p>huipeng.jia</p><p><strong><code>Description</code></strong></p><p>补间组，用于同时控制多个补间对象</p><p><strong><code>Network Status</code></strong></p><p>usage: 双端</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h3><ul><li><a href="./Util.Util.TweenUtil.Group.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h3><ul><li><a href="./Util.Util.TweenUtil.Group.html#add">add</a></li><li><a href="./Util.Util.TweenUtil.Group.html#getall">getAll</a></li><li><a href="./Util.Util.TweenUtil.Group.html#remove">remove</a></li><li><a href="./Util.Util.TweenUtil.Group.html#removeall">removeAll</a></li><li><a href="./Util.Util.TweenUtil.Group.html#update">update</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h3><p>• <strong>new Group</strong>()</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-hidden="true">#</a></h2><h3 id="add" tabindex="-1">add <a class="header-anchor" href="#add" aria-hidden="true">#</a></h3><p>▸ <strong>add</strong>(<code>tween</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>将指定补间对象加入当前补间组</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>tween</code></td><td style="text-align:left;"><a href="./Util.Util.TweenUtil.Tween.html"><code>Tween</code></a>&lt;<a href="./../modules/Util.Util.TweenUtil.html#unknownprops"><code>UnknownProps</code></a>&gt;</td><td style="text-align:left;">usage: 要添加的补间对象</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p>Util/index.d.ts:898</p><hr><h3 id="getall" tabindex="-1">getAll <a class="header-anchor" href="#getall" aria-hidden="true">#</a></h3><p>▸ <strong>getAll</strong>(): <a href="./Util.Util.TweenUtil.Tween.html"><code>Tween</code></a>&lt;<a href="./../modules/Util.Util.TweenUtil.html#unknownprops"><code>UnknownProps</code></a>&gt;[]</p><p><strong><code>Description</code></strong></p><p>获取当前补间组中所有补间对象</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><a href="./Util.Util.TweenUtil.Tween.html"><code>Tween</code></a>&lt;<a href="./../modules/Util.Util.TweenUtil.html#unknownprops"><code>UnknownProps</code></a>&gt;[]</p><p>补间对象数组</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p>Util/index.d.ts:886</p><hr><h3 id="remove" tabindex="-1">remove <a class="header-anchor" href="#remove" aria-hidden="true">#</a></h3><p>▸ <strong>remove</strong>(<code>tween</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>将指定补间对象移出当前补间组并删除</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>tween</code></td><td style="text-align:left;"><a href="./Util.Util.TweenUtil.Tween.html"><code>Tween</code></a>&lt;<a href="./../modules/Util.Util.TweenUtil.html#unknownprops"><code>UnknownProps</code></a>&gt;</td><td style="text-align:left;">usage: 要移出并删除的补间对象</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p>Util/index.d.ts:904</p><hr><h3 id="removeall" tabindex="-1">removeAll <a class="header-anchor" href="#removeall" aria-hidden="true">#</a></h3><p>▸ <strong>removeAll</strong>(): <code>void</code></p><p><strong><code>Description</code></strong></p><p>移除当前补间组中所有补间对象</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>按照当前函数的实现，只是从补间组中移除补间对象，并未删除</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p>Util/index.d.ts:892</p><hr><h3 id="update" tabindex="-1">update <a class="header-anchor" href="#update" aria-hidden="true">#</a></h3><p>▸ <strong>update</strong>(<code>time?</code>, <code>preserve?</code>): <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>更新补间组</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Example</code></strong></p><p>使用示例: 一般来说，调用时使用默认参数即可使之正常运行。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">// 更新自定义补间组</span></span>
<span class="line"><span style="color:#A6ACCD;">const group = new Extension.TweenUtil.Group()</span></span>
<span class="line"><span style="color:#A6ACCD;">group.update()</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// 更新全局补间组</span></span>
<span class="line"><span style="color:#A6ACCD;">Extension.TweenUtil.TWEEN.update()</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>time?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage: 要为当前补间组中所有补间对象设置的时间，不是 deltaTime。 default: 当前时间</td></tr><tr><td style="text-align:left;"><code>preserve?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">usage: 已经结束的补间对象，是否在补间组中继续保留 default: false</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p>是否还有补间对象未结束。true-有未结束的补间对象；false-均已结束</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a></h4><p>Util/index.d.ts:922</p>`,85),d=[l];function o(s,i,h,c,p,u){return a(),t("div",null,d)}const m=e(n,[["render",o]]);export{g as __pageData,m as default};
