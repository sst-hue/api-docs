import{_ as e,c as t,o as a,a as d}from"./app.8e21f956.js";const g=JSON.parse('{"title":"Namespace: TimeUtil","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Variables","slug":"variables","link":"#variables","children":[]},{"level":3,"title":"Functions","slug":"functions","link":"#functions","children":[]}]},{"level":2,"title":"Variables","slug":"variables-1","link":"#variables-1","children":[{"level":3,"title":"onEnterFrame","slug":"onenterframe","link":"#onenterframe","children":[]},{"level":3,"title":"traceFrameTime","slug":"traceframetime","link":"#traceframetime","children":[]}]},{"level":2,"title":"Functions","slug":"functions-1","link":"#functions-1","children":[{"level":3,"title":"clear","slug":"clear","link":"#clear","children":[]},{"level":3,"title":"clearDelayExecute","slug":"cleardelayexecute","link":"#cleardelayexecute","children":[]},{"level":3,"title":"clearInterval","slug":"clearinterval","link":"#clearinterval","children":[]},{"level":3,"title":"delayExecute","slug":"delayexecute","link":"#delayexecute","children":[]},{"level":3,"title":"delaySecond","slug":"delaysecond","link":"#delaysecond","children":[]},{"level":3,"title":"delayTime","slug":"delaytime","link":"#delaytime","children":[]},{"level":3,"title":"elapsedTime","slug":"elapsedtime","link":"#elapsedtime","children":[]},{"level":3,"title":"getExecuteTime","slug":"getexecutetime","link":"#getexecutetime","children":[]},{"level":3,"title":"parseTime","slug":"parsetime","link":"#parsetime","children":[]},{"level":3,"title":"setInterval","slug":"setinterval","link":"#setinterval","children":[]},{"level":3,"title":"time","slug":"time","link":"#time","children":[]}]}],"relativePath":"modules/Util.Util.TimeUtil.md"}'),r={name:"modules/Util.Util.TimeUtil.md"},i=d(`<p><a href="./../README.html">auto-mwapi-lib</a> / <a href="./../modules.html">Exports</a> / <a href="./Util.html">Util</a> / <a href="./Util.Util.html">Util</a> / TimeUtil</p><h1 id="namespace-timeutil" tabindex="-1">Namespace: TimeUtil <a class="header-anchor" href="#namespace-timeutil" aria-hidden="true">#</a></h1><p><a href="./Util.html">Util</a>.<a href="./Util.Util.html">Util</a>.TimeUtil</p><p><strong><code>Author</code></strong></p><p>huipeng.jia &amp; xiangkun.sun</p><p><strong><code>Description</code></strong></p><p>时间工具</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h3><ul><li><a href="./Util.Util.TimeUtil.html#onenterframe">onEnterFrame</a></li><li><a href="./Util.Util.TimeUtil.html#traceframetime">traceFrameTime</a></li></ul><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h3><ul><li><a href="./Util.Util.TimeUtil.html#clear">clear</a></li><li><a href="./Util.Util.TimeUtil.html#cleardelayexecute">clearDelayExecute</a></li><li><a href="./Util.Util.TimeUtil.html#clearinterval">clearInterval</a></li><li><a href="./Util.Util.TimeUtil.html#delayexecute">delayExecute</a></li><li><a href="./Util.Util.TimeUtil.html#delaysecond">delaySecond</a></li><li><a href="./Util.Util.TimeUtil.html#delaytime">delayTime</a></li><li><a href="./Util.Util.TimeUtil.html#elapsedtime">elapsedTime</a></li><li><a href="./Util.Util.TimeUtil.html#getexecutetime">getExecuteTime</a></li><li><a href="./Util.Util.TimeUtil.html#parsetime">parseTime</a></li><li><a href="./Util.Util.TimeUtil.html#setinterval">setInterval</a></li><li><a href="./Util.Util.TimeUtil.html#time">time</a></li></ul><h2 id="variables-1" tabindex="-1">Variables <a class="header-anchor" href="#variables-1" aria-hidden="true">#</a></h2><h3 id="onenterframe" tabindex="-1">onEnterFrame <a class="header-anchor" href="#onenterframe" aria-hidden="true">#</a></h3><p>• <code>Const</code> <strong>onEnterFrame</strong>: <a href="./../classes/Type.Type.Action1.html"><code>Action1</code></a>&lt;<code>number</code>&gt;</p><p><strong><code>Description</code></strong></p><p>进入帧事件时执行绑定函数(参数 deltaTime)</p><p><strong><code>Precautions</code></strong></p><p>每次 update 时自动执行所有绑定的函数</p><p><strong><code>Example</code></strong></p><p>使用示例:绑定函数</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">onEnterFrame.add((dt : number) =&gt;{</span></span>
<span class="line"><span style="color:#A6ACCD;">     console.log(&quot;dt:&quot; + dt);</span></span>
<span class="line"><span style="color:#A6ACCD;">});</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p>Util/index.d.ts:737</p><hr><h3 id="traceframetime" tabindex="-1">traceFrameTime <a class="header-anchor" href="#traceframetime" aria-hidden="true">#</a></h3><p>• <strong>traceFrameTime</strong>: <code>boolean</code></p><p><strong><code>Description</code></strong></p><p>是否输出每帧的执行时间</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p>Util/index.d.ts:741</p><h2 id="functions-1" tabindex="-1">Functions <a class="header-anchor" href="#functions-1" aria-hidden="true">#</a></h2><h3 id="clear" tabindex="-1">clear <a class="header-anchor" href="#clear" aria-hidden="true">#</a></h3><p>▸ <strong>clear</strong>(): <code>void</code></p><p><strong><code>Description</code></strong></p><p>清除所有</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p>Util/index.d.ts:800</p><hr><h3 id="cleardelayexecute" tabindex="-1">clearDelayExecute <a class="header-anchor" href="#cleardelayexecute" aria-hidden="true">#</a></h3><p>▸ <strong>clearDelayExecute</strong>(<code>id</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>清除 delayExecute</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage: delayExecute 方法返回的 ID</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p>Util/index.d.ts:762</p><hr><h3 id="clearinterval" tabindex="-1">clearInterval <a class="header-anchor" href="#clearinterval" aria-hidden="true">#</a></h3><p>▸ <strong>clearInterval</strong>(<code>id</code>): <code>void</code></p><p><strong><code>Description</code></strong></p><p>清除 setInterval</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage: setInterval 方法返回的 ID</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a></h4><p>Util/index.d.ts:781</p><hr><h3 id="delayexecute" tabindex="-1">delayExecute <a class="header-anchor" href="#delayexecute" aria-hidden="true">#</a></h3><p>▸ <strong>delayExecute</strong>(<code>handler</code>, <code>frameNum?</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>延迟一定帧数执行方法</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>handler</code></td><td style="text-align:left;">() =&gt; <code>void</code></td><td style="text-align:left;">usage: 执行的方法</td></tr><tr><td style="text-align:left;"><code>frameNum?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage: 要延迟的帧数 default: 1</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><code>number</code></p><p>用于停止的 ID</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a></h4><p>Util/index.d.ts:756</p><hr><h3 id="delaysecond" tabindex="-1">delaySecond <a class="header-anchor" href="#delaysecond" aria-hidden="true">#</a></h3><p>▸ <strong>delaySecond</strong>(<code>second</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p><strong><code>Description</code></strong></p><p>延迟一定秒数,用于异步方法中间的等待，不可取消</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>second</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage: 时间(单位：秒)</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>Promise</p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a></h4><p>Util/index.d.ts:788</p><hr><h3 id="delaytime" tabindex="-1">delayTime <a class="header-anchor" href="#delaytime" aria-hidden="true">#</a></h3><p>▸ <strong>delayTime</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>每一帧经过的时间 (单位：秒)</p><p><strong><code>Precautions</code></strong></p><p>调用这个函数之前两次 Update 函数调用之间的间隔时间</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-hidden="true">#</a></h4><p><code>number</code></p><p>number（单位：秒）</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a></h4><p>Util/index.d.ts:748</p><hr><h3 id="elapsedtime" tabindex="-1">elapsedTime <a class="header-anchor" href="#elapsedtime" aria-hidden="true">#</a></h3><p>▸ <strong>elapsedTime</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>返回自游戏运行后所经过的总时长，单位秒，精确到毫秒。</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>在 MetaWorld Editor 中，该数值是从每次开始运行起计算，而非从打开 Editor 场景起计算。</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-hidden="true">#</a></h4><p><code>number</code></p><p>自游戏运行后所经过的总时长。</p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a></h4><p>Util/index.d.ts:717</p><hr><h3 id="getexecutetime" tabindex="-1">getExecuteTime <a class="header-anchor" href="#getexecutetime" aria-hidden="true">#</a></h3><p>▸ <strong>getExecuteTime</strong>(<code>fn</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>获取一个方法的执行时间</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;">() =&gt; <code>void</code></td><td style="text-align:left;">usage: 方法</td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-hidden="true">#</a></h4><p><code>number</code></p><p>时间(毫秒)</p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a></h4><p>Util/index.d.ts:795</p><hr><h3 id="parsetime" tabindex="-1">parseTime <a class="header-anchor" href="#parsetime" aria-hidden="true">#</a></h3><p>▸ <strong>parseTime</strong>(<code>timeData</code>, <code>format?</code>): <code>string</code></p><p><strong><code>Description</code></strong></p><p>格式化时间戳</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>timeData</code></td><td style="text-align:left;"><code>Date</code></td><td style="text-align:left;">usage:标准时间, 时间戳等</td></tr><tr><td style="text-align:left;"><code>format?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">usage:日期字符造串 default:outer</td></tr></tbody></table><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-hidden="true">#</a></h4><p><code>string</code></p><p>格式化后时间字符串</p><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a></h4><p>Util/index.d.ts:725</p><hr><h3 id="setinterval" tabindex="-1">setInterval <a class="header-anchor" href="#setinterval" aria-hidden="true">#</a></h3><p>▸ <strong>setInterval</strong>(<code>handler</code>, <code>timeout</code>, <code>exitJudge?</code>): <code>number</code></p><p><strong><code>Description</code></strong></p><p>按一定时间间隔执行方法</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>handler</code></td><td style="text-align:left;">() =&gt; <code>void</code></td><td style="text-align:left;">usage: 要执行的方法</td></tr><tr><td style="text-align:left;"><code>timeout</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">usage: 间隔时间（最小时间为两帧时间差 单位：秒）</td></tr><tr><td style="text-align:left;"><code>exitJudge?</code></td><td style="text-align:left;">() =&gt; <code>boolean</code></td><td style="text-align:left;">usage: 退出的判断方法 返回 true 停止 default: null</td></tr></tbody></table><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-hidden="true">#</a></h4><p><code>number</code></p><p>用于停止的 ID</p><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a></h4><p>Util/index.d.ts:771</p><hr><h3 id="time" tabindex="-1">time <a class="header-anchor" href="#time" aria-hidden="true">#</a></h3><p>▸ <strong>time</strong>(): <code>number</code></p><p><strong><code>Description</code></strong></p><p>返回当前本地会话所在的电脑自 UNIX Epoch（UNIX 纪元）开始所经过的时间（以秒为单位）。</p><p><strong><code>Effect</code></strong></p><p>调用端生效</p><p><strong><code>Precautions</code></strong></p><p>UNIX 纪元的开始日期为 1970 年 1 月 1 日。</p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-hidden="true">#</a></h4><p><code>number</code></p><p>（UNIX 纪元）开始所经过的秒数。</p><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a></h4><p>Util/index.d.ts:710</p>`,180),n=[i];function l(s,o,c,h,p,f){return a(),t("div",null,n)}const m=e(r,[["render",l]]);export{g as __pageData,m as default};
